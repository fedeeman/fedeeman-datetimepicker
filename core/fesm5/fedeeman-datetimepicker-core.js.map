{"version":3,"file":"fedeeman-datetimepicker-core.js","sources":["ng://fedeeman-datetimepicker/core/adapter/datetime-adapter.ts","ng://fedeeman-datetimepicker/core/adapter/datetime-formats.ts","ng://fedeeman-datetimepicker/core/adapter/native-datetime-adapter.ts","ng://fedeeman-datetimepicker/core/adapter/native-datetime-formats.ts","ng://fedeeman-datetimepicker/core/adapter/adapter.module.ts","ng://fedeeman-datetimepicker/core/datetimepicker/datetimepicker-animations.ts","ng://fedeeman-datetimepicker/core/datetimepicker/datetimepicker-errors.ts","ng://fedeeman-datetimepicker/core/datetimepicker/datetimepicker-filtertype.ts","ng://fedeeman-datetimepicker/core/datetimepicker/calendar.ts","ng://fedeeman-datetimepicker/core/datetimepicker/calendar-body.ts","ng://fedeeman-datetimepicker/core/datetimepicker/clock.ts","ng://fedeeman-datetimepicker/core/datetimepicker/datetimepicker.ts","ng://fedeeman-datetimepicker/core/datetimepicker/datetimepicker-input.ts","ng://fedeeman-datetimepicker/core/datetimepicker/datetimepicker-toggle.ts","ng://fedeeman-datetimepicker/core/datetimepicker/month-view.ts","ng://fedeeman-datetimepicker/core/datetimepicker/year-view.ts","ng://fedeeman-datetimepicker/core/datetimepicker/datetimepicker.module.ts","ng://fedeeman-datetimepicker/core/fedeeman-datetimepicker-core.ts"],"sourcesContent":["import { DateAdapter } from \"@angular/material/core\";\r\n\r\nexport abstract class DatetimeAdapter<D> extends DateAdapter<D> {\r\n\r\n  constructor(protected _delegate: DateAdapter<D>) {\r\n    super();\r\n  }\r\n\r\n  abstract getHour(date: D): number;\r\n\r\n  abstract getMinute(date: D): number;\r\n\r\n  abstract getFirstDateOfMonth(date: D): D;\r\n\r\n  abstract isInNextMonth(startDate: D, endDate: D): boolean;\r\n\r\n  abstract getHourNames(): string[];\r\n\r\n  abstract getMinuteNames(): string[];\r\n\r\n  abstract addCalendarHours(date: D, months: number): D;\r\n\r\n  abstract addCalendarMinutes(date: D, months: number): D;\r\n\r\n  abstract createDatetime(year: number, month: number, date: number, hour: number, minute: number): D;\r\n\r\n  getValidDateOrNull(obj: any): D | null {\r\n    return (this.isDateInstance(obj) && this.isValid(obj)) ? obj : null;\r\n  }\r\n\r\n  compareDatetime(first: D, second: D): number {\r\n    return this.compareDate(first, second) ||\r\n      this.getHour(first) - this.getHour(second) ||\r\n      this.getMinute(first) - this.getMinute(second);\r\n  }\r\n\r\n  sameDatetime(first: D | null, second: D | null): boolean {\r\n    if (first && second) {\r\n      const firstValid = this.isValid(first);\r\n      const secondValid = this.isValid(second);\r\n      if (firstValid && secondValid) {\r\n        return !this.compareDatetime(first, second);\r\n      }\r\n      return firstValid === secondValid;\r\n    }\r\n    return first === second;\r\n  }\r\n\r\n  sameYear(first: D, second: D) {\r\n    return first && second && this.getYear(first) === this.getYear(second);\r\n  }\r\n\r\n  sameDay(first: D, second: D) {\r\n    return first && second && this.getDate(first) === this.getDate(second) && this.sameMonthAndYear(first, second);\r\n  }\r\n\r\n  sameHour(first: D, second: D) {\r\n    return first && second && this.getHour(first) === this.getHour(second) && this.sameDay(first, second);\r\n  }\r\n\r\n  sameMinute(first: D, second: D) {\r\n    return first && second && this.getMinute(first) === this.getMinute(second) && this.sameHour(first, second);\r\n  }\r\n\r\n  sameMonthAndYear(first: D | null, second: D | null): boolean {\r\n    if (first && second) {\r\n      const firstValid = this.isValid(first);\r\n      const secondValid = this.isValid(second);\r\n      if (firstValid && secondValid) {\r\n        return !(this.getYear(first) - this.getYear(second) ||\r\n          this.getMonth(first) - this.getMonth(second));\r\n      }\r\n      return firstValid === secondValid;\r\n    }\r\n    return first === second;\r\n  }\r\n\r\n  // delegate\r\n  clone(date: D): D {\r\n    return this._delegate.clone(date);\r\n  }\r\n\r\n  addCalendarYears(date: D, years: number): D {\r\n    return this._delegate.addCalendarYears(date, years);\r\n  }\r\n\r\n  addCalendarMonths(date: D, months: number): D {\r\n    return this._delegate.addCalendarMonths(date, months);\r\n  }\r\n\r\n  addCalendarDays(date: D, days: number): D {\r\n    return this._delegate.addCalendarDays(date, days);\r\n  }\r\n\r\n  getYear(date: D): number {\r\n    return this._delegate.getYear(date);\r\n  }\r\n\r\n  getMonth(date: D): number {\r\n    return this._delegate.getMonth(date);\r\n  }\r\n\r\n  getDate(date: D): number {\r\n    return this._delegate.getDate(date);\r\n  }\r\n\r\n  getDayOfWeek(date: D): number {\r\n    return this._delegate.getDayOfWeek(date);\r\n  }\r\n\r\n  getMonthNames(style): string[] {\r\n    return this._delegate.getMonthNames(style);\r\n  }\r\n\r\n  getDateNames(): string[] {\r\n    return this._delegate.getDateNames();\r\n  }\r\n\r\n  getDayOfWeekNames(style): string[] {\r\n    return this._delegate.getDayOfWeekNames(style);\r\n  }\r\n\r\n  getYearName(date: D): string {\r\n    return this._delegate.getYearName(date);\r\n  }\r\n\r\n  getFirstDayOfWeek(): number {\r\n    return this._delegate.getFirstDayOfWeek();\r\n  }\r\n\r\n  getNumDaysInMonth(date: D): number {\r\n    return this._delegate.getNumDaysInMonth(date);\r\n  }\r\n\r\n  createDate(year: number, month: number, date: number): D {\r\n    return this._delegate.createDate(year, month, date);\r\n  }\r\n\r\n  today(): D {\r\n    return this._delegate.today();\r\n  }\r\n\r\n  parse(value: any, parseFormat: any): D | null {\r\n    return this._delegate.parse(value, parseFormat);\r\n  }\r\n\r\n  format(date: D, displayFormat: any): string {\r\n    return this._delegate.format(date, displayFormat);\r\n  }\r\n\r\n  toIso8601(date: D): string {\r\n    return this._delegate.toIso8601(date);\r\n  }\r\n\r\n  isDateInstance(obj: any): boolean {\r\n    return this._delegate.isDateInstance(obj);\r\n  }\r\n\r\n  isValid(date: D): boolean {\r\n    return this._delegate.isValid(date);\r\n  }\r\n\r\n  invalid(): D {\r\n    return this._delegate.invalid();\r\n  }\r\n\r\n  clampDate(date: D, min?: D | null, max?: D | null): D {\r\n    if (min && this.compareDatetime(date, min) < 0) {\r\n      return min;\r\n    }\r\n    if (max && this.compareDatetime(date, max) > 0) {\r\n      return max;\r\n    }\r\n    return date;\r\n  }\r\n}\r\n","import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface MatDatetimeFormats {\r\n  parse: {\r\n    dateInput?: any;\r\n    monthInput?: any;\r\n    timeInput?: any;\r\n    datetimeInput?: any;\r\n  };\r\n  display: {\r\n    dateInput: any;\r\n    monthInput: any;\r\n    timeInput: any;\r\n    datetimeInput: any;\r\n    monthYearLabel: any;\r\n    dateA11yLabel: any;\r\n    monthYearA11yLabel: any;\r\n    popupHeaderDateLabel: any;\r\n  };\r\n}\r\n\r\nexport const MAT_DATETIME_FORMATS = new InjectionToken<MatDatetimeFormats>(\"mat-datetime-formats\");\r\n","import {\r\n  Inject,\r\n  Injectable,\r\n  Optional\r\n} from \"@angular/core\";\r\nimport {\r\n  DateAdapter,\r\n  MAT_DATE_LOCALE\r\n} from \"@angular/material/core\";\r\nimport { DatetimeAdapter } from \"./datetime-adapter\";\r\n\r\n/** The default hour names to use if Intl API is not available. */\r\nconst DEFAULT_HOUR_NAMES = range(24, i => String(i));\r\n\r\n/** The default minute names to use if Intl API is not available. */\r\nconst DEFAULT_MINUTE_NAMES = range(60, i => String(i));\r\n\r\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\r\n  const valuesArray = Array(length);\r\n  for (let i = 0; i < length; i++) {\r\n    valuesArray[i] = valueFunction(i);\r\n  }\r\n  return valuesArray;\r\n}\r\n\r\n@Injectable()\r\nexport class NativeDatetimeAdapter extends DatetimeAdapter<Date> {\r\n\r\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string, _delegate: DateAdapter<Date>) {\r\n    super(_delegate);\r\n    this.setLocale(matDateLocale);\r\n  }\r\n\r\n  clone(date: Date): Date {\r\n    return this.createDatetime(this.getYear(date), this.getMonth(date), this.getDate(date), this.getHour(date), this.getMinute(date));\r\n  }\r\n\r\n  getHour(date: Date): number {\r\n    return date.getHours();\r\n  }\r\n\r\n  getMinute(date: Date): number {\r\n    return date.getMinutes();\r\n  }\r\n\r\n  isInNextMonth(startDate: Date, endDate: Date): boolean {\r\n    const nextMonth = this.getDateInNextMonth(startDate);\r\n    return this.sameMonthAndYear(nextMonth, endDate);\r\n  }\r\n\r\n  createDatetime(year: number, month: number, date: number, hour: number, minute: number): Date {\r\n    // Check for invalid month and date (except upper bound on date which we have to check after\r\n    // creating the Date).\r\n    if (month < 0 || month > 11) {\r\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\r\n    }\r\n\r\n    if (date < 1) {\r\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\r\n    }\r\n\r\n    if (hour < 0 || hour > 23) {\r\n      throw Error(`Invalid hour \"${hour}\". Hour has to be between 0 and 23.`);\r\n    }\r\n\r\n    if (minute < 0 || minute > 59) {\r\n      throw Error(`Invalid minute \"${minute}\". Minute has to be between 0 and 59.`);\r\n    }\r\n\r\n    const result = this._createDateWithOverflow(year, month, date, hour, minute);\r\n\r\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\r\n    if (result.getMonth() !== month) {\r\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private getDateInNextMonth(date: Date) {\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 1,\r\n      date.getHours(), date.getMinutes());\r\n  }\r\n\r\n  getFirstDateOfMonth(date: Date): Date {\r\n    const result = new Date();\r\n    result.setFullYear(date.getFullYear(), date.getMonth(), 1);\r\n    return result;\r\n  }\r\n\r\n  getHourNames(): string[] {\r\n    return DEFAULT_HOUR_NAMES;\r\n  }\r\n\r\n  getMinuteNames(): string[] {\r\n    return DEFAULT_MINUTE_NAMES;\r\n  }\r\n\r\n  addCalendarYears(date: Date, years: number): Date {\r\n    return this.addCalendarMonths(date, years * 12);\r\n  }\r\n\r\n  addCalendarMonths(date: Date, months: number): Date {\r\n    let newDate = this._createDateWithOverflow(\r\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date), this.getHour(date), this.getMinute(date));\r\n\r\n    // It's possible to wind up in the wrong month if the original month has more days than the new\r\n    // month. In this case we want to go to the last day of the desired month.\r\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\r\n    // guarantee this.\r\n    if (this.getMonth(newDate) !== ((this.getMonth(date) + months) % 12 + 12) % 12) {\r\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0, this.getHour(date), this.getMinute(date));\r\n    }\r\n\r\n    return newDate;\r\n  }\r\n\r\n  addCalendarDays(date: Date, days: number): Date {\r\n    return this._createDateWithOverflow(\r\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days, this.getHour(date), this.getMinute(date));\r\n  }\r\n\r\n  addCalendarHours(date: Date, hours: number): Date {\r\n    return this._createDateWithOverflow(\r\n      this.getYear(date), this.getMonth(date), this.getDate(date),\r\n      this.getHour(date) + hours, this.getMinute(date));\r\n  }\r\n\r\n  addCalendarMinutes(date: Date, minutes: number): Date {\r\n    return this._createDateWithOverflow(\r\n      this.getYear(date), this.getMonth(date), this.getDate(date),\r\n      this.getHour(date), this.getMinute(date) + minutes);\r\n  }\r\n\r\n  toIso8601(date: Date): string {\r\n    return super.toIso8601(date) + \"T\" + [\r\n      this._2digit(date.getUTCHours()),\r\n      this._2digit(date.getUTCMinutes())\r\n    ].join(\":\");\r\n  }\r\n\r\n  /**\r\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\r\n   * other browsers do not. We remove them to make output consistent and because they interfere with\r\n   * date parsing.\r\n   * @param str The string to strip direction characters from.\r\n   * @returns The stripped string.\r\n   */\r\n  private _stripDirectionalityCharacters(str: string) {\r\n    return str.replace(/[\\u200e\\u200f]/g, \"\");\r\n  }\r\n\r\n  /**\r\n   * Pads a number to make it two digits.\r\n   * @param n The number to pad.\r\n   * @returns The padded number.\r\n   */\r\n  private _2digit(n: number) {\r\n    return (\"00\" + n).slice(-2);\r\n  }\r\n\r\n  /** Creates a date but allows the month and date to overflow. */\r\n  private _createDateWithOverflow(year: number, month: number, date: number,\r\n                                  hours: number, minutes: number) {\r\n    const result = new Date(year, month, date, hours, minutes);\r\n\r\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\r\n    // abbreviations for 19xx.\r\n    if (year >= 0 && year < 100) {\r\n      result.setFullYear(this.getYear(result) - 1900);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { MatDatetimeFormats } from \"./datetime-formats\";\r\n\r\nexport const MAT_NATIVE_DATETIME_FORMATS: MatDatetimeFormats = {\r\n  parse: {},\r\n  display: {\r\n    dateInput: {year: \"numeric\", month: \"2-digit\", day: \"2-digit\"},\r\n    monthInput: {month: \"long\"},\r\n    datetimeInput: {year: \"numeric\", month: \"2-digit\", day: \"2-digit\", hour: \"2-digit\", minute: \"2-digit\"},\r\n    timeInput: {hour: \"2-digit\", minute: \"2-digit\"},\r\n    monthYearLabel: {year: \"numeric\", month: \"short\"},\r\n    dateA11yLabel: {year: \"numeric\", month: \"long\", day: \"numeric\"},\r\n    monthYearA11yLabel: {year: \"numeric\", month: \"long\"},\r\n    popupHeaderDateLabel: {weekday: \"short\", month: \"short\", day: \"2-digit\"}\r\n  }\r\n};\r\n","import { NgModule } from \"@angular/core\";\r\nimport {\r\n  MatNativeDateModule,\r\n  NativeDateModule,\r\n} from \"@angular/material/core\";\r\nimport { DatetimeAdapter } from \"./datetime-adapter\";\r\nimport { MAT_DATETIME_FORMATS } from \"./datetime-formats\";\r\nimport { NativeDatetimeAdapter } from \"./native-datetime-adapter\";\r\nimport { MAT_NATIVE_DATETIME_FORMATS } from \"./native-datetime-formats\";\r\n\r\n// tslint:disable max-classes-per-file\r\n@NgModule({\r\n  imports: [NativeDateModule],\r\n  providers: [\r\n    {\r\n      provide: DatetimeAdapter,\r\n      useClass: NativeDatetimeAdapter\r\n    }\r\n  ]\r\n})\r\nexport class NativeDatetimeModule {\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    NativeDatetimeModule,\r\n    MatNativeDateModule\r\n  ],\r\n  providers: [{provide: MAT_DATETIME_FORMATS, useValue: MAT_NATIVE_DATETIME_FORMATS}]\r\n})\r\nexport class MatNativeDatetimeModule {\r\n}\r\n","import {\r\n  animate,\r\n  AnimationTriggerMetadata,\r\n  keyframes,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger\r\n} from \"@angular/animations\";\r\n\r\n/**\r\n * This animation fades in the background color and text content of the\r\n * select's options. It is time delayed to occur 100ms after the overlay\r\n * panel has transformed in.\r\n */\r\nexport const fadeInContent: AnimationTriggerMetadata = trigger(\"fadeInContent\", [\r\n  state(\"showing\", style({opacity: 1})),\r\n  transition(\"void => showing\", [\r\n    style({opacity: 0}),\r\n    animate(`150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)`)\r\n  ])\r\n]);\r\n\r\nexport const slideCalendar: AnimationTriggerMetadata = trigger(\"slideCalendar\", [\r\n  transition(\"* => left\", [\r\n    animate(180, keyframes([\r\n      style({transform: \"translateX(100%)\", offset: 0.5}),\r\n      style({transform: \"translateX(-100%)\", offset: 0.51}),\r\n      style({transform: \"translateX(0)\", offset: 1})\r\n    ]))\r\n  ]),\r\n  transition(\"* => right\", [\r\n    animate(180, keyframes([\r\n      style({transform: \"translateX(-100%)\", offset: 0.5}),\r\n      style({transform: \"translateX(100%)\", offset: 0.51}),\r\n      style({transform: \"translateX(0)\", offset: 1})\r\n    ]))\r\n  ])\r\n]);\r\n","/** @docs-private */\r\nexport function createMissingDateImplError(provider: string) {\r\n  return Error(\r\n      `MatDatetimepicker: No provider found for ${provider}. You must import one of the following ` +\r\n      `modules at your application root: MatNativeDatetimeModule, MatMomentDatetimeModule, or provide a ` +\r\n      `custom implementation.`);\r\n}\r\n","export enum MatDatetimepickerFilterType {\r\n  DATE, HOUR, MINUTE\r\n}\r\n","import {\r\n  DOWN_ARROW,\r\n  END,\r\n  ENTER,\r\n  HOME,\r\n  LEFT_ARROW,\r\n  PAGE_DOWN,\r\n  PAGE_UP,\r\n  RIGHT_ARROW,\r\n  UP_ARROW\r\n} from \"@angular/cdk/keycodes\";\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  ViewEncapsulation\r\n} from \"@angular/core\";\r\nimport { MatDatepickerIntl } from \"@angular/material/datepicker\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { first } from \"rxjs/operators\";\r\nimport { DatetimeAdapter } from \"../adapter/datetime-adapter\";\r\nimport {\r\n  MAT_DATETIME_FORMATS,\r\n  MatDatetimeFormats\r\n} from \"../adapter/datetime-formats\";\r\nimport { slideCalendar } from \"./datetimepicker-animations\";\r\nimport { createMissingDateImplError } from \"./datetimepicker-errors\";\r\nimport { MatDatetimepickerFilterType } from \"./datetimepicker-filtertype\";\r\n\r\n/**\r\n * A calendar that is used as part of the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: \"mat-datetimepicker-calendar\",\r\n  templateUrl: \"calendar.html\",\r\n  styleUrls: [\"calendar.scss\"],\r\n  host: {\r\n    \"[class.mat-datetimepicker-calendar]\": \"true\",\r\n    \"tabindex\": \"0\",\r\n    \"(keydown)\": \"_handleCalendarBodyKeydown($event)\"\r\n  },\r\n  animations: [slideCalendar],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatDatetimepickerCalendar<D> implements AfterContentInit, OnDestroy {\r\n\r\n  private _intlChanges: Subscription;\r\n\r\n  @Output() _userSelection = new EventEmitter<void>();\r\n\r\n  @Input() type: \"date\" | \"time\" | \"month\" | \"datetime\" = \"date\";\r\n\r\n  /** A date representing the period (month or year) to start the calendar in. */\r\n  @Input()\r\n  get startAt(): D | null {\r\n    return this._startAt;\r\n  }\r\n\r\n  set startAt(value: D | null) {\r\n    this._startAt = this._adapter.getValidDateOrNull(value);\r\n  }\r\n\r\n  private _startAt: D | null;\r\n\r\n  /** Whether the calendar should be started in month or year view. */\r\n  @Input() startView: \"clock\" | \"month\" | \"year\" = \"month\";\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D | null {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: D | null) {\r\n    this._selected = this._adapter.getValidDateOrNull(value);\r\n  }\r\n\r\n  private _selected: D | null;\r\n\r\n  /** The minimum selectable date. */\r\n  @Input()\r\n  get minDate(): D | null {\r\n    return this._minDate;\r\n  }\r\n\r\n  set minDate(value: D | null) {\r\n    this._minDate = this._adapter.getValidDateOrNull(value);\r\n  }\r\n\r\n  private _minDate: D | null;\r\n\r\n  /** The maximum selectable date. */\r\n  @Input()\r\n  get maxDate(): D | null {\r\n    return this._maxDate;\r\n  }\r\n\r\n  set maxDate(value: D | null) {\r\n    this._maxDate = this._adapter.getValidDateOrNull(value);\r\n  }\r\n\r\n  private _maxDate: D | null;\r\n\r\n  @Input() timeInterval: number = 1;\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D, type: MatDatetimepickerFilterType) => boolean;\r\n\r\n  /** Emits when the currently selected date changes. */\r\n  @Output() selectedChange = new EventEmitter<D>();\r\n\r\n  /** Date filter for the month and year views. */\r\n  _dateFilterForViews = (date: D) => {\r\n    return !!date &&\r\n      (!this.dateFilter || this.dateFilter(date, MatDatetimepickerFilterType.DATE)) &&\r\n      (!this.minDate || this._adapter.compareDate(date, this.minDate) >= 0) &&\r\n      (!this.maxDate || this._adapter.compareDate(date, this.maxDate) <= 0);\r\n  };\r\n\r\n  /**\r\n   * The current active date. This determines which time period is shown and which date is\r\n   * highlighted when using keyboard navigation.\r\n   */\r\n  get _activeDate(): D {\r\n    return this._clampedActiveDate;\r\n  }\r\n\r\n  set _activeDate(value: D) {\r\n    const oldActiveDate = this._clampedActiveDate;\r\n    this._clampedActiveDate = this._adapter.clampDate(value, this.minDate, this.maxDate);\r\n    if (oldActiveDate && this._clampedActiveDate && this._currentView === \"month\" &&\r\n      !this._adapter.sameMonthAndYear(oldActiveDate, this._clampedActiveDate)) {\r\n      if (this._adapter.isInNextMonth(oldActiveDate, this._clampedActiveDate)) {\r\n        this.calendarState(\"right\");\r\n      } else {\r\n        this.calendarState(\"left\");\r\n      }\r\n      this.changeDetectorRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  private _clampedActiveDate: D;\r\n\r\n  _userSelected(): void {\r\n    this._userSelection.emit();\r\n  }\r\n\r\n  /** Whether the calendar is in month view. */\r\n  _currentView: \"clock\" | \"month\" | \"year\" = \"month\";\r\n  _clockView: \"hour\" | \"minute\" = \"hour\";\r\n\r\n  /** The label for the current calendar view. */\r\n  get _yearLabel(): string {\r\n    return this._adapter.getYearName(this._activeDate);\r\n  }\r\n\r\n  get _monthYearLabel(): string {\r\n    return this._currentView === \"month\" ? this._adapter.getMonthNames(\"long\")[this._adapter.getMonth(this._activeDate)] :\r\n      this._adapter.getYearName(this._activeDate);\r\n  }\r\n\r\n  get _dateLabel(): string {\r\n    if (this.type === \"month\") {\r\n      return this._adapter.getMonthNames(\"long\")[this._adapter.getMonth(this._activeDate)];\r\n    }\r\n    return this._adapter.format(this._activeDate, this._dateFormats.display.popupHeaderDateLabel);\r\n\r\n  }\r\n\r\n  get _hoursLabel(): string {\r\n    return this._2digit(this._adapter.getHour(this._activeDate));\r\n  }\r\n\r\n  get _minutesLabel(): string {\r\n    return this._2digit(this._adapter.getMinute(this._activeDate));\r\n  }\r\n\r\n  _calendarState: string;\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              private _intl: MatDatepickerIntl,\r\n              private _ngZone: NgZone,\r\n              @Optional() private _adapter: DatetimeAdapter<D>,\r\n              @Optional() @Inject(MAT_DATETIME_FORMATS) private _dateFormats: MatDatetimeFormats,\r\n              private changeDetectorRef: ChangeDetectorRef) {\r\n    if (!this._adapter) {\r\n      throw createMissingDateImplError(\"DatetimeAdapter\");\r\n    }\r\n\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError(\"MAT_DATETIME_FORMATS\");\r\n    }\r\n\r\n    this._intlChanges = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._activeDate = this.startAt || this._adapter.today();\r\n    this._focusActiveCell();\r\n    if (this.type === \"month\") {\r\n      this._currentView = \"year\";\r\n    } else if (this.type === \"time\") {\r\n      this._currentView = \"clock\";\r\n    } else {\r\n      this._currentView = this.startView || \"month\";\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._intlChanges.unsubscribe();\r\n  }\r\n\r\n  /** Handles date selection in the month view. */\r\n  _dateSelected(date: D): void {\r\n    this._activeDate = date;\r\n    if (this.type !== \"date\") {\r\n      this._currentView = \"clock\";\r\n    }\r\n  }\r\n\r\n  /** Handles month selection in the year view. */\r\n  _monthSelected(month: D): void {\r\n    this._activeDate = month;\r\n    if (this.type !== 'month') {\r\n      this._currentView = \"month\";\r\n      this._clockView = \"hour\";\r\n    }\r\n  }\r\n\r\n  _timeSelected(date: D): void {\r\n    this._activeDate = date;\r\n    this._clockView = \"minute\";\r\n  }\r\n\r\n  @Input() confirmButtonLabel: string;\r\n  _handleConfirmButton(event): void {\r\n    this.selectedChange.emit(this._activeDate);\r\n    this._userSelected();\r\n  }\r\n\r\n  @Input() cancelButtonLabel: string;\r\n  _handleCancelButton(event): void {\r\n    // Close dialog (datetimepicker.close())\r\n    this._userSelection.emit();\r\n\r\n  }\r\n\r\n  _onActiveDateChange(date: D) {\r\n    this._activeDate = date;\r\n  }\r\n\r\n  _yearClicked(): void {\r\n    this._currentView = \"year\";\r\n  }\r\n\r\n  _dateClicked(): void {\r\n    if (this.type !== 'month') {\r\n      this._currentView = \"month\";\r\n    }\r\n  }\r\n\r\n  _hoursClicked(): void {\r\n    this._currentView = \"clock\";\r\n    this._clockView = \"hour\";\r\n  }\r\n\r\n  _minutesClicked(): void {\r\n    this._currentView = \"clock\";\r\n    this._clockView = \"minute\";\r\n  }\r\n\r\n  /** Handles user clicks on the previous button. */\r\n  _previousClicked(): void {\r\n    this._activeDate = this._currentView === \"month\" ?\r\n      this._adapter.addCalendarMonths(this._activeDate, -1) :\r\n      this._adapter.addCalendarYears(this._activeDate, -1);\r\n  }\r\n\r\n  /** Handles user clicks on the next button. */\r\n  _nextClicked(): void {\r\n    this._activeDate = this._currentView === \"month\" ?\r\n      this._adapter.addCalendarMonths(this._activeDate, 1) :\r\n      this._adapter.addCalendarYears(this._activeDate, 1);\r\n  }\r\n\r\n  /** Whether the previous period button is enabled. */\r\n  _previousEnabled(): boolean {\r\n    if (!this.minDate) {\r\n      return true;\r\n    }\r\n    return !this.minDate || !this._isSameView(this._activeDate, this.minDate);\r\n  }\r\n\r\n  /** Whether the next period button is enabled. */\r\n  _nextEnabled(): boolean {\r\n    return !this.maxDate || !this._isSameView(this._activeDate, this.maxDate);\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body. */\r\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\r\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\r\n    // disabled ones from being selected. This may not be ideal, we should look into whether\r\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\r\n    if (this._currentView === \"month\") {\r\n      this._handleCalendarBodyKeydownInMonthView(event);\r\n    } else if (this._currentView === \"year\") {\r\n      this._handleCalendarBodyKeydownInYearView(event);\r\n    } else {\r\n      this._handleCalendarBodyKeydownInClockView(event);\r\n    }\r\n  }\r\n\r\n  _focusActiveCell() {\r\n    this._ngZone.runOutsideAngular(() => {\r\n      this._ngZone.onStable.asObservable().pipe(first()).subscribe(() => {\r\n        this._elementRef.nativeElement.focus();\r\n      });\r\n    });\r\n  }\r\n\r\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\r\n  private _isSameView(date1: D, date2: D): boolean {\r\n    return this._currentView === \"month\" ?\r\n      this._adapter.getYear(date1) == this._adapter.getYear(date2) &&\r\n      this._adapter.getMonth(date1) == this._adapter.getMonth(date2) :\r\n      this._adapter.getYear(date1) == this._adapter.getYear(date2);\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in month view. */\r\n  private _handleCalendarBodyKeydownInMonthView(event: KeyboardEvent): void {\r\n    switch (event.keyCode) {\r\n      case LEFT_ARROW:\r\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, -1);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, 1);\r\n        break;\r\n      case UP_ARROW:\r\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, -7);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, 7);\r\n        break;\r\n      case HOME:\r\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate,\r\n          1 - this._adapter.getDate(this._activeDate));\r\n        break;\r\n      case END:\r\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate,\r\n          (this._adapter.getNumDaysInMonth(this._activeDate) -\r\n            this._adapter.getDate(this._activeDate)));\r\n        break;\r\n      case PAGE_UP:\r\n        this._activeDate = event.altKey ?\r\n          this._adapter.addCalendarYears(this._activeDate, -1) :\r\n          this._adapter.addCalendarMonths(this._activeDate, -1);\r\n        break;\r\n      case PAGE_DOWN:\r\n        this._activeDate = event.altKey ?\r\n          this._adapter.addCalendarYears(this._activeDate, 1) :\r\n          this._adapter.addCalendarMonths(this._activeDate, 1);\r\n        break;\r\n      case ENTER:\r\n        if (this._dateFilterForViews(this._activeDate)) {\r\n          this._dateSelected(this._activeDate);\r\n          // Prevent unexpected default actions such as form submission.\r\n          event.preventDefault();\r\n        }\r\n        return;\r\n      default:\r\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n\r\n    // Prevent unexpected default actions such as form submission.\r\n    event.preventDefault();\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in year view. */\r\n  private _handleCalendarBodyKeydownInYearView(event: KeyboardEvent): void {\r\n    switch (event.keyCode) {\r\n      case LEFT_ARROW:\r\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate, -1);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate, 1);\r\n        break;\r\n      case UP_ARROW:\r\n        this._activeDate = this._prevMonthInSameCol(this._activeDate);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this._activeDate = this._nextMonthInSameCol(this._activeDate);\r\n        break;\r\n      case HOME:\r\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate,\r\n          -this._adapter.getMonth(this._activeDate));\r\n        break;\r\n      case END:\r\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate,\r\n          11 - this._adapter.getMonth(this._activeDate));\r\n        break;\r\n      case PAGE_UP:\r\n        this._activeDate =\r\n          this._adapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\r\n        break;\r\n      case PAGE_DOWN:\r\n        this._activeDate =\r\n          this._adapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\r\n        break;\r\n      case ENTER:\r\n        this._monthSelected(this._activeDate);\r\n        break;\r\n      default:\r\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n\r\n    // Prevent unexpected default actions such as form submission.\r\n    event.preventDefault();\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in month view. */\r\n  private _handleCalendarBodyKeydownInClockView(event: KeyboardEvent): void {\r\n    switch (event.keyCode) {\r\n      case UP_ARROW:\r\n        this._activeDate = this._clockView == \"hour\" ?\r\n          this._adapter.addCalendarHours(this._activeDate, 1) :\r\n          this._adapter.addCalendarMinutes(this._activeDate, 1);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this._activeDate = this._clockView == \"hour\" ?\r\n          this._adapter.addCalendarHours(this._activeDate, -1) :\r\n          this._adapter.addCalendarMinutes(this._activeDate, -1);\r\n        break;\r\n      case ENTER:\r\n        this._timeSelected(this._activeDate);\r\n        return;\r\n      default:\r\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n\r\n    // Prevent unexpected default actions such as form submission.\r\n    event.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Determine the date for the month that comes before the given month in the same column in the\r\n   * calendar table.\r\n   */\r\n  private _prevMonthInSameCol(date: D): D {\r\n    // Determine how many months to jump forward given that there are 2 empty slots at the beginning\r\n    // of each year.\r\n    const increment = this._adapter.getMonth(date) <= 4 ? -5 :\r\n      (this._adapter.getMonth(date) >= 7 ? -7 : -12);\r\n    return this._adapter.addCalendarMonths(date, increment);\r\n  }\r\n\r\n  /**\r\n   * Determine the date for the month that comes after the given month in the same column in the\r\n   * calendar table.\r\n   */\r\n  private _nextMonthInSameCol(date: D): D {\r\n    // Determine how many months to jump forward given that there are 2 empty slots at the beginning\r\n    // of each year.\r\n    const increment = this._adapter.getMonth(date) <= 4 ? 7 :\r\n      (this._adapter.getMonth(date) >= 7 ? 5 : 12);\r\n    return this._adapter.addCalendarMonths(date, increment);\r\n  }\r\n\r\n  private calendarState(direction: string): void {\r\n    this._calendarState = direction;\r\n  }\r\n\r\n  _calendarStateDone() {\r\n    this._calendarState = \"\";\r\n  }\r\n\r\n  private _2digit(n: number) {\r\n    return (\"00\" + n).slice(-2);\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewEncapsulation\r\n} from \"@angular/core\";\r\n\r\n/**\r\n * An internal class that represents the data corresponding to a single calendar cell.\r\n * @docs-private\r\n */\r\nexport class MatDatetimepickerCalendarCell {\r\n  constructor(public value: number,\r\n              public displayValue: string,\r\n              public ariaLabel: string,\r\n              public enabled: boolean) {\r\n  }\r\n}\r\n\r\n/**\r\n * An internal component used to display calendar data in a table.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: \"[mat-datetimepicker-calendar-body]\",\r\n  templateUrl: \"calendar-body.html\",\r\n  styleUrls: [\"calendar-body.scss\"],\r\n  host: {\r\n    \"class\": \"mat-datetimepicker-calendar-body\"\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatDatetimepickerCalendarBody {\r\n  /** The label for the table. (e.g. \"Jan 2017\"). */\r\n  @Input() label: string;\r\n\r\n  /** The cells to display in the table. */\r\n  @Input() rows: MatDatetimepickerCalendarCell[][];\r\n\r\n  /** The value in the table that corresponds to today. */\r\n  @Input() todayValue: number;\r\n\r\n  /** The value in the table that is currently selected. */\r\n  @Input() selectedValue: number;\r\n\r\n  /** The minimum number of free cells needed to fit the label in the first row. */\r\n  @Input() labelMinRequiredCells: number;\r\n\r\n  /** The number of columns in the table. */\r\n  @Input() numCols = 7;\r\n\r\n  /** Whether to allow selection of disabled cells. */\r\n  @Input() allowDisabledSelection = false;\r\n\r\n  /** The cell number of the active cell in the table. */\r\n  @Input() activeCell = 0;\r\n\r\n  /** Emits when a new value is selected. */\r\n  @Output() selectedValueChange = new EventEmitter<number>();\r\n\r\n  _cellClicked(cell: MatDatetimepickerCalendarCell): void {\r\n    if (!this.allowDisabledSelection && !cell.enabled) {\r\n      return;\r\n    }\r\n    this.selectedValueChange.emit(cell.value);\r\n  }\r\n\r\n  /** The number of blank cells to put at the beginning for the first row. */\r\n  get _firstRowOffset(): number {\r\n    return this.rows && this.rows.length && this.rows[0].length ?\r\n      this.numCols - this.rows[0].length : 0;\r\n  }\r\n\r\n  _isActiveCell(rowIndex: number, colIndex: number): boolean {\r\n    let cellNumber = rowIndex * this.numCols + colIndex;\r\n\r\n    // Account for the fact that the first row may not have as many cells.\r\n    if (rowIndex) {\r\n      cellNumber -= this._firstRowOffset;\r\n    }\r\n\r\n    return cellNumber === this.activeCell;\r\n  }\r\n}\r\n","/* tslint:disable */\r\nimport {\r\n  AfterContentInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output\r\n} from \"@angular/core\";\r\nimport { DatetimeAdapter } from \"../adapter/datetime-adapter\";\r\nimport { MatDatetimepickerFilterType } from \"./datetimepicker-filtertype\";\r\n\r\nexport const CLOCK_RADIUS = 50;\r\nexport const CLOCK_INNER_RADIUS = 27.5;\r\nexport const CLOCK_OUTER_RADIUS = 41.25;\r\nexport const CLOCK_TICK_RADIUS = 7.0833;\r\n\r\nexport type ClockView = \"hour\" | \"minute\";\r\n\r\n/**\r\n * A clock that is used as part of the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: \"mat-datetimepicker-clock\",\r\n  templateUrl: \"clock.html\",\r\n  styleUrls: [\"clock.scss\"],\r\n  host: {\r\n    \"role\": \"clock\",\r\n    \"(mousedown)\": \"_handleMousedown($event)\"\r\n  }\r\n})\r\nexport class MatDatetimepickerClock<D> implements AfterContentInit {\r\n\r\n  @Output() _userSelection = new EventEmitter<void>();\r\n\r\n  /**\r\n   * The date to display in this clock view.\r\n   */\r\n  @Input()\r\n  get activeDate(): D {\r\n    return this._activeDate;\r\n  }\r\n\r\n  set activeDate(value: D) {\r\n    let oldActiveDate = this._activeDate;\r\n    this._activeDate = this._adapter.clampDate(value, this.minDate, this.maxDate);\r\n    if (!this._adapter.sameMinute(oldActiveDate, this._activeDate)) {\r\n      this._init();\r\n    }\r\n  }\r\n\r\n  private _activeDate: D;\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D | null {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: D | null) {\r\n    this._selected = this._adapter.getValidDateOrNull(this._adapter.deserialize(value));\r\n    if (this._selected) {\r\n      this.activeDate = this._selected;\r\n    }\r\n  }\r\n\r\n  private _selected: D | null;\r\n\r\n  /** The minimum selectable date. */\r\n  @Input()\r\n  get minDate(): D | null {\r\n    return this._minDate;\r\n  }\r\n\r\n  set minDate(value: D | null) {\r\n    this._minDate = this._adapter.getValidDateOrNull(this._adapter.deserialize(value));\r\n  }\r\n\r\n  private _minDate: D | null;\r\n\r\n  private _timeChanged = false;\r\n\r\n  /** The maximum selectable date. */\r\n  @Input()\r\n  get maxDate(): D | null {\r\n    return this._maxDate;\r\n  }\r\n\r\n  set maxDate(value: D | null) {\r\n    this._maxDate = this._adapter.getValidDateOrNull(this._adapter.deserialize(value));\r\n  }\r\n\r\n  private _maxDate: D | null;\r\n\r\n  /** Whether the clock should be started in hour or minute view. */\r\n  @Input()\r\n  set startView(value: ClockView) {\r\n    this._hourView = value != \"minute\";\r\n  }\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D, type: MatDatetimepickerFilterType) => boolean;\r\n\r\n  @Input() interval: number = 1;\r\n\r\n  @Input() twelvehour: boolean = false;\r\n\r\n  /** Emits when the currently selected date changes. */\r\n  @Output() selectedChange = new EventEmitter<D>();\r\n\r\n  @Output() activeDateChange = new EventEmitter<D>();\r\n\r\n  /** Hours and Minutes representing the clock view. */\r\n  _hours: Array<Object> = [];\r\n  _minutes: Array<Object> = [];\r\n\r\n  /** Whether the clock is in hour view. */\r\n  _hourView: boolean = true;\r\n\r\n  _selectedHour: number;\r\n  _selectedMinute: number;\r\n\r\n  get _hand(): any {\r\n    this._selectedHour = this._adapter.getHour(this.activeDate);\r\n    this._selectedMinute = this._adapter.getMinute(this.activeDate);\r\n    let deg = 0;\r\n    let radius = CLOCK_OUTER_RADIUS;\r\n    if (this._hourView) {\r\n      let outer = this._selectedHour > 0 && this._selectedHour < 13;\r\n      radius = outer ? CLOCK_OUTER_RADIUS : CLOCK_INNER_RADIUS;\r\n      if (this.twelvehour) {\r\n        radius = CLOCK_OUTER_RADIUS;\r\n      }\r\n      deg = Math.round(this._selectedHour * (360 / (24 / 2)));\r\n    } else {\r\n      deg = Math.round(this._selectedMinute * (360 / 60));\r\n    }\r\n    return {\r\n      \"transform\": `rotate(${deg}deg)`,\r\n      \"height\": `${radius}%`,\r\n      \"margin-top\": `${50 - radius}%`\r\n    };\r\n  }\r\n\r\n  private mouseMoveListener: any;\r\n  private mouseUpListener: any;\r\n\r\n  constructor(private _element: ElementRef,\r\n              private _adapter: DatetimeAdapter<D>) {\r\n    this.mouseMoveListener = (event: any) => {\r\n      this._handleMousemove(event);\r\n    };\r\n    this.mouseUpListener = () => {\r\n      this._handleMouseup();\r\n    };\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.activeDate = this._activeDate || this._adapter.today();\r\n    this._init();\r\n  }\r\n\r\n  /** Handles mousedown events on the clock body. */\r\n  _handleMousedown(event: any) {\r\n    this._timeChanged = false;\r\n    this.setTime(event);\r\n    document.addEventListener(\"mousemove\", this.mouseMoveListener);\r\n    document.addEventListener(\"touchmove\", this.mouseMoveListener);\r\n    document.addEventListener(\"mouseup\", this.mouseUpListener);\r\n    document.addEventListener(\"touchend\", this.mouseUpListener);\r\n  }\r\n\r\n  _handleMousemove(event: any) {\r\n    event.preventDefault();\r\n    this.setTime(event);\r\n  }\r\n\r\n  _handleMouseup() {\r\n    document.removeEventListener(\"mousemove\", this.mouseMoveListener);\r\n    document.removeEventListener(\"touchmove\", this.mouseMoveListener);\r\n    document.removeEventListener(\"mouseup\", this.mouseUpListener);\r\n    document.removeEventListener(\"touchend\", this.mouseUpListener);\r\n    if (this._timeChanged) {\r\n      this.selectedChange.emit(this.activeDate);\r\n    }\r\n  }\r\n\r\n  /** Initializes this clock view. */\r\n  private _init() {\r\n    this._hours.length = 0;\r\n    this._minutes.length = 0;\r\n\r\n    let hourNames = this._adapter.getHourNames();\r\n    let minuteNames = this._adapter.getMinuteNames();\r\n\r\n    if (this.twelvehour) {\r\n      for (let i = 1; i < (hourNames.length / 2) + 1; i++) {\r\n        let radian = i / 6 * Math.PI;\r\n        let radius = CLOCK_OUTER_RADIUS;\r\n        const date = this._adapter.createDatetime(\r\n          this._adapter.getYear(this.activeDate),\r\n          this._adapter.getMonth(this.activeDate),\r\n          this._adapter.getDate(this.activeDate), i + 1, 0);\r\n        let enabled =\r\n          (!this.minDate || this._adapter.compareDatetime(date, this.minDate) >= 0) &&\r\n          (!this.maxDate || this._adapter.compareDatetime(date, this.maxDate) <= 0);\r\n        this._hours.push({\r\n          value: i,\r\n          displayValue: i === 0 ? \"00\" : hourNames[i],\r\n          enabled: enabled,\r\n          top: CLOCK_RADIUS - Math.cos(radian) * radius - CLOCK_TICK_RADIUS,\r\n          left: CLOCK_RADIUS + Math.sin(radian) * radius - CLOCK_TICK_RADIUS\r\n        });\r\n      }\r\n    } else {\r\n      for (let i = 0; i < hourNames.length; i++) {\r\n        let radian = i / 6 * Math.PI;\r\n        let outer = i > 0 && i < 13,\r\n          radius = outer ? CLOCK_OUTER_RADIUS : CLOCK_INNER_RADIUS;\r\n        const date = this._adapter.createDatetime(\r\n          this._adapter.getYear(this.activeDate),\r\n          this._adapter.getMonth(this.activeDate),\r\n          this._adapter.getDate(this.activeDate), i, 0);\r\n        let enabled =\r\n          (!this.minDate || this._adapter.compareDatetime(date, this.minDate) >= 0) &&\r\n          (!this.maxDate || this._adapter.compareDatetime(date, this.maxDate) <= 0) &&\r\n          (!this.dateFilter || this.dateFilter(date, MatDatetimepickerFilterType.HOUR));\r\n        this._hours.push({\r\n          value: i,\r\n          displayValue: i === 0 ? \"00\" : hourNames[i],\r\n          enabled: enabled,\r\n          top: CLOCK_RADIUS - Math.cos(radian) * radius - CLOCK_TICK_RADIUS,\r\n          left: CLOCK_RADIUS + Math.sin(radian) * radius - CLOCK_TICK_RADIUS,\r\n          fontSize: i > 0 && i < 13 ? \"\" : \"80%\"\r\n        });\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < minuteNames.length; i += 5) {\r\n      let radian = i / 30 * Math.PI;\r\n      const date = this._adapter.createDatetime(\r\n        this._adapter.getYear(this.activeDate),\r\n        this._adapter.getMonth(this.activeDate),\r\n        this._adapter.getDate(this.activeDate), this._adapter.getHour(this.activeDate), i);\r\n      let enabled =\r\n        (!this.minDate || this._adapter.compareDatetime(date, this.minDate) >= 0) &&\r\n        (!this.maxDate || this._adapter.compareDatetime(date, this.maxDate) <= 0) &&\r\n        (!this.dateFilter || this.dateFilter(date, MatDatetimepickerFilterType.MINUTE));\r\n      this._minutes.push({\r\n        value: i,\r\n        displayValue: i === 0 ? \"00\" : minuteNames[i],\r\n        enabled: enabled,\r\n        top: CLOCK_RADIUS - Math.cos(radian) * CLOCK_OUTER_RADIUS - CLOCK_TICK_RADIUS,\r\n        left: CLOCK_RADIUS + Math.sin(radian) * CLOCK_OUTER_RADIUS - CLOCK_TICK_RADIUS\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set Time\r\n   * @param event\r\n   */\r\n  private setTime(event: any) {\r\n    let trigger = this._element.nativeElement;\r\n    let triggerRect = trigger.getBoundingClientRect();\r\n    let width = trigger.offsetWidth;\r\n    let height = trigger.offsetHeight;\r\n    let pageX = event.pageX !== undefined ? event.pageX : event.touches[0].pageX;\r\n    let pageY = event.pageY !== undefined ? event.pageY : event.touches[0].pageY;\r\n    let x = (width / 2) - (pageX - triggerRect.left - window.pageXOffset);\r\n    let y = (height / 2) - (pageY - triggerRect.top - window.pageYOffset);\r\n    let radian = Math.atan2(-x, y);\r\n    let unit = Math.PI / (this._hourView ? 6 : (this.interval ? (30 / this.interval) : 30));\r\n    let z = Math.sqrt(x * x + y * y);\r\n    let outer = this._hourView && z > ((width * (CLOCK_OUTER_RADIUS / 100)) +\r\n      (width * (CLOCK_INNER_RADIUS / 100))) / 2;\r\n\r\n    if (radian < 0) {\r\n      radian = Math.PI * 2 + radian;\r\n    }\r\n    let value = Math.round(radian / unit);\r\n\r\n    let date;\r\n    if (this._hourView) {\r\n      if (this.twelvehour) {\r\n        value = value === 0 ? 12 : value;\r\n      } else {\r\n        if (value === 12) {\r\n          value = 0;\r\n        }\r\n        value = outer ? (value === 0 ? 12 : value) : value === 0 ? 0 : value + 12;\r\n      }\r\n      date = this._adapter.createDatetime(\r\n        this._adapter.getYear(this.activeDate),\r\n        this._adapter.getMonth(this.activeDate),\r\n        this._adapter.getDate(this.activeDate), value, this._adapter.getMinute(this.activeDate));\r\n    } else {\r\n      if (this.interval) {\r\n        value *= this.interval;\r\n      }\r\n      if (value === 60) {\r\n        value = 0;\r\n      }\r\n      date = this._adapter.createDatetime(\r\n        this._adapter.getYear(this.activeDate),\r\n        this._adapter.getMonth(this.activeDate),\r\n        this._adapter.getDate(this.activeDate), this._adapter.getHour(this.activeDate), value);\r\n    }\r\n\r\n    const clamped = this._adapter.clampDate(date, this.minDate, this.maxDate);\r\n    if (date === clamped) {\r\n      this._timeChanged = true;\r\n      this.activeDate = clamped;\r\n      this.activeDateChange.emit(this.activeDate);\r\n    }\r\n  }\r\n}\r\n","import { Directionality } from \"@angular/cdk/bidi\";\r\nimport { coerceBooleanProperty } from \"@angular/cdk/coercion\";\r\nimport { ESCAPE } from \"@angular/cdk/keycodes\";\r\nimport {\r\n  Overlay,\r\n  OverlayConfig,\r\n  OverlayRef,\r\n  PositionStrategy\r\n} from \"@angular/cdk/overlay\";\r\nimport { ComponentPortal } from \"@angular/cdk/portal\";\r\nimport { DOCUMENT } from \"@angular/common\";\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ComponentRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  ViewEncapsulation\r\n} from \"@angular/core\";\r\nimport { MAT_DATEPICKER_SCROLL_STRATEGY } from \"@angular/material/datepicker\";\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef\r\n} from \"@angular/material/dialog\";\r\nimport { Subject, Subscription } from \"rxjs\";\r\nimport { first } from \"rxjs/operators\";\r\nimport { DatetimeAdapter } from \"../adapter/datetime-adapter\";\r\nimport { MatDatetimepickerCalendar } from \"./calendar\";\r\nimport { createMissingDateImplError } from \"./datetimepicker-errors\";\r\nimport { MatDatetimepickerFilterType } from \"./datetimepicker-filtertype\";\r\nimport { MatDatetimepickerInput } from \"./datetimepicker-input\";\r\n\r\n/** Used to generate a unique ID for each datepicker instance. */\r\nlet datetimepickerUid = 0;\r\n\r\n/**\r\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\r\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\r\n * place to put additional features of the popup that are not part of the calendar itself in the\r\n * future. (e.g. confirmation buttons).\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: \"mat-datetimepicker-content\",\r\n  templateUrl: \"datetimepicker-content.html\",\r\n  styleUrls: [\"datetimepicker-content.scss\"],\r\n  host: {\r\n    \"class\": \"mat-datetimepicker-content\",\r\n    \"[class.mat-datetimepicker-content-touch]\": \"datetimepicker?.touchUi\",\r\n    \"(keydown)\": \"_handleKeydown($event)\"\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatDatetimepickerContent<D> implements AfterContentInit {\r\n  datetimepicker: MatDatetimepicker<D>;\r\n\r\n  @ViewChild(MatDatetimepickerCalendar, { static: true }) _calendar: MatDatetimepickerCalendar<D>;\r\n\r\n  ngAfterContentInit() {\r\n    this._calendar._focusActiveCell();\r\n  }\r\n\r\n  /**\r\n   * Handles keydown event on datepicker content.\r\n   * @param event The event.\r\n   */\r\n  _handleKeydown(event: KeyboardEvent): void {\r\n    if (event.keyCode === ESCAPE) {\r\n      this.datetimepicker.close();\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: \"mat-datetimepicker\",\r\n  exportAs: \"matDatetimepicker\",\r\n  template: \"\",\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false\r\n})\r\nexport class MatDatetimepicker<D> implements OnDestroy {\r\n  /** The date to open the calendar to initially. */\r\n  @Input()\r\n  get startAt(): D | null {\r\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\r\n    // selected value is.\r\n    return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\r\n  }\r\n\r\n  set startAt(date: D | null) {\r\n    this._startAt = this._dateAdapter.getValidDateOrNull(date);\r\n  }\r\n\r\n  private _startAt: D | null;\r\n\r\n  /** The view that the calendar should start in. */\r\n  @Input() startView: \"clock\" | \"month\" | \"year\" = \"month\";\r\n  @Input() mode: \"auto\" | \"portrait\" | \"landscape\" = \"auto\";\r\n  @Input() timeInterval: number = 1;\r\n\r\n  @Input()\r\n  get openOnFocus(): boolean { return this._openOnFocus; }\r\n  set openOnFocus(value: boolean) { this._openOnFocus = coerceBooleanProperty(value); }\r\n  private _openOnFocus: boolean;\r\n\r\n  _handleFocus() {\r\n    if (!this.opened && this.openOnFocus) {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  get type() {\r\n    return this._type;\r\n  }\r\n\r\n  set type(value: \"date\" | \"time\" | \"month\" | \"datetime\") {\r\n    this._type = value || \"date\";\r\n  }\r\n\r\n  private _type: \"date\" | \"time\" | \"month\" | \"datetime\" = \"date\";\r\n\r\n  /**\r\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\r\n   * than a popup and elements have more padding to allow for bigger touch targets.\r\n   */\r\n  @Input()\r\n  get touchUi(): boolean {\r\n    return this._touchUi;\r\n  }\r\n\r\n  set touchUi(value: boolean) {\r\n    this._touchUi = coerceBooleanProperty(value);\r\n  }\r\n\r\n  private _touchUi = false;\r\n\r\n  /** Whether the datepicker pop-up should be disabled. */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled === undefined && this._datepickerInput ?\r\n      this._datepickerInput.disabled : !!this._disabled;\r\n  }\r\n\r\n  set disabled(value: boolean) {\r\n    const newValue = coerceBooleanProperty(value);\r\n\r\n    if (newValue !== this._disabled) {\r\n      this._disabled = newValue;\r\n      this._disabledChange.next(newValue);\r\n    }\r\n  }\r\n\r\n  private _disabled: boolean;\r\n\r\n  /**\r\n   * Emits new selected date when selected date changes.\r\n   * @deprecated Switch to the `dateChange` and `dateInput` binding on the input element.\r\n   */\r\n  @Output() selectedChanged = new EventEmitter<D>();\r\n\r\n  /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\r\n  @Input() panelClass: string | string[];\r\n\r\n  @Input() confirmButtonLabel = 'Confirm';\r\n  @Input() cancelButtonLabel = 'Cancel';\r\n\r\n  /** Emits when the datepicker has been opened. */\r\n  @Output(\"opened\") openedStream: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** Emits when the datepicker has been closed. */\r\n  @Output(\"closed\") closedStream: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** Whether the calendar is open. */\r\n  opened = false;\r\n\r\n  /** The id for the datepicker calendar. */\r\n  id = `mat-datetimepicker-${datetimepickerUid++}`;\r\n\r\n  /** The currently selected date. */\r\n  get _selected(): D | null {\r\n    return this._validSelected;\r\n  }\r\n\r\n  set _selected(value: D | null) {\r\n    this._validSelected = value;\r\n  }\r\n\r\n  private _validSelected: D | null = null;\r\n\r\n  /** The minimum selectable date. */\r\n  get _minDate(): D | null {\r\n    return this._datepickerInput && this._datepickerInput.min;\r\n  }\r\n\r\n  /** The maximum selectable date. */\r\n  get _maxDate(): D | null {\r\n    return this._datepickerInput && this._datepickerInput.max;\r\n  }\r\n\r\n  get _dateFilter(): (date: D | null, type: MatDatetimepickerFilterType) => boolean {\r\n    return this._datepickerInput && this._datepickerInput._dateFilter;\r\n  }\r\n\r\n  /** A reference to the overlay when the calendar is opened as a popup. */\r\n  private _popupRef: OverlayRef;\r\n\r\n  /** A reference to the dialog when the calendar is opened as a dialog. */\r\n  private _dialogRef: MatDialogRef<any> | null;\r\n\r\n  /** A portal containing the calendar for this datepicker. */\r\n  private _calendarPortal: ComponentPortal<MatDatetimepickerContent<D>>;\r\n\r\n  /** The element that was focused before the datepicker was opened. */\r\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\r\n\r\n  private _inputSubscription = Subscription.EMPTY;\r\n\r\n  /** The input element this datepicker is associated with. */\r\n  _datepickerInput: MatDatetimepickerInput<D>;\r\n\r\n  /** Emits when the datepicker is disabled. */\r\n  _disabledChange = new Subject<boolean>();\r\n\r\n  constructor(private _dialog: MatDialog,\r\n              private _overlay: Overlay,\r\n              private _ngZone: NgZone,\r\n              private _viewContainerRef: ViewContainerRef,\r\n              @Inject(MAT_DATEPICKER_SCROLL_STRATEGY) private _scrollStrategy,\r\n              @Optional() private _dateAdapter: DatetimeAdapter<D>,\r\n              @Optional() private _dir: Directionality,\r\n              @Optional() @Inject(DOCUMENT) private _document: any) {\r\n    if (!this._dateAdapter) {\r\n      throw createMissingDateImplError(\"DateAdapter\");\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.close();\r\n    this._inputSubscription.unsubscribe();\r\n    this._disabledChange.complete();\r\n\r\n    if (this._popupRef) {\r\n      this._popupRef.dispose();\r\n    }\r\n  }\r\n\r\n  /** Selects the given date */\r\n  _select(date: D): void {\r\n    const oldValue = this._selected;\r\n    this._selected = date;\r\n    if (!this._dateAdapter.sameDatetime(oldValue, this._selected)) {\r\n      // tslint:disable-next-line deprecation\r\n      this.selectedChanged.emit(date);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register an input with this datepicker.\r\n   * @param input The datepicker input to register with this datepicker.\r\n   */\r\n  _registerInput(input: MatDatetimepickerInput<D>): void {\r\n    if (this._datepickerInput) {\r\n      throw Error(\"A MatDatepicker can only be associated with a single input.\");\r\n    }\r\n    this._datepickerInput = input;\r\n    this._inputSubscription =\r\n      this._datepickerInput._valueChange.subscribe((value: D | null) => this._selected = value);\r\n  }\r\n\r\n  /** Open the calendar. */\r\n  open(): void {\r\n    if (this.opened || this.disabled) {\r\n      return;\r\n    }\r\n    if (!this._datepickerInput) {\r\n      throw Error(\"Attempted to open an MatDatepicker with no associated input.\");\r\n    }\r\n    if (this._document) {\r\n      this._focusedElementBeforeOpen = this._document.activeElement;\r\n    }\r\n\r\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\r\n    this.opened = true;\r\n    this.openedStream.emit();\r\n  }\r\n\r\n  /** Close the calendar. */\r\n  close(): void {\r\n    if (!this.opened) {\r\n      return;\r\n    }\r\n    if (this._popupRef && this._popupRef.hasAttached()) {\r\n      this._popupRef.detach();\r\n    }\r\n    if (this._dialogRef) {\r\n      this._dialogRef.close();\r\n      this._dialogRef = null;\r\n    }\r\n    if (this._calendarPortal && this._calendarPortal.isAttached) {\r\n      this._calendarPortal.detach();\r\n    }\r\n\r\n    const completeClose = () => {\r\n      // The `_opened` could've been reset already if\r\n      // we got two events in quick succession.\r\n      if (this.opened) {\r\n        this.opened = false;\r\n        this.closedStream.emit();\r\n        this._focusedElementBeforeOpen = null;\r\n      }\r\n    };\r\n\r\n    if (this._focusedElementBeforeOpen &&\r\n      typeof this._focusedElementBeforeOpen.focus === \"function\") {\r\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\r\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\r\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\r\n      // able to close the calendar at all. We work around it by making the logic, that marks\r\n      // the datepicker as closed, async as well.\r\n      this._focusedElementBeforeOpen.focus();\r\n      setTimeout(completeClose);\r\n    } else {\r\n      completeClose();\r\n    }\r\n  }\r\n\r\n  /** Open the calendar as a dialog. */\r\n  private _openAsDialog(): void {\r\n    this._dialogRef = this._dialog.open(MatDatetimepickerContent, {\r\n      direction: this._dir ? this._dir.value : \"ltr\",\r\n      viewContainerRef: this._viewContainerRef,\r\n      panelClass: \"mat-datetimepicker-dialog\"\r\n    });\r\n    this._dialogRef.afterClosed().subscribe(() => this.close());\r\n    this._dialogRef.componentInstance.datetimepicker = this;\r\n  }\r\n\r\n  /** Open the calendar as a popup. */\r\n  private _openAsPopup(): void {\r\n    if (!this._calendarPortal) {\r\n      this._calendarPortal = new ComponentPortal<MatDatetimepickerContent<D>>(MatDatetimepickerContent, this._viewContainerRef);\r\n    }\r\n\r\n    if (!this._popupRef) {\r\n      this._createPopup();\r\n    }\r\n\r\n    if (!this._popupRef.hasAttached()) {\r\n      const componentRef: ComponentRef<MatDatetimepickerContent<D>> =\r\n        this._popupRef.attach(this._calendarPortal);\r\n      componentRef.instance.datetimepicker = this;\r\n\r\n      // Update the position once the calendar has rendered.\r\n      this._ngZone.onStable.asObservable().pipe(first()).subscribe(() => {\r\n        this._popupRef.updatePosition();\r\n      });\r\n    }\r\n\r\n    this._popupRef.backdropClick().subscribe(() => this.close());\r\n  }\r\n\r\n  /** Create the popup. */\r\n  private _createPopup(): void {\r\n    const overlayConfig = new OverlayConfig({\r\n      positionStrategy: this._createPopupPositionStrategy(),\r\n      hasBackdrop: true,\r\n      backdropClass: \"mat-overlay-transparent-backdrop\",\r\n      direction: this._dir ? this._dir.value : \"ltr\",\r\n      scrollStrategy: this._scrollStrategy(),\r\n      panelClass: \"mat-datetimepicker-popup\"\r\n    });\r\n\r\n    this._popupRef = this._overlay.create(overlayConfig);\r\n  }\r\n\r\n  /** Create the popup PositionStrategy. */\r\n  private _createPopupPositionStrategy(): PositionStrategy {\r\n    return this._overlay.position()\r\n      .connectedTo(this._datepickerInput.getPopupConnectionElementRef(),\r\n        {originX: \"start\", originY: \"bottom\"},\r\n        {overlayX: \"start\", overlayY: \"top\"}\r\n      )\r\n      .withFallbackPosition(\r\n        {originX: \"start\", originY: \"top\"},\r\n        {overlayX: \"start\", overlayY: \"bottom\"}\r\n      )\r\n      .withFallbackPosition(\r\n        {originX: \"end\", originY: \"bottom\"},\r\n        {overlayX: \"end\", overlayY: \"top\"}\r\n      )\r\n      .withFallbackPosition(\r\n        {originX: \"end\", originY: \"top\"},\r\n        {overlayX: \"end\", overlayY: \"bottom\"}\r\n      );\r\n  }\r\n}\r\n","import { coerceBooleanProperty } from \"@angular/cdk/coercion\";\r\nimport { DOWN_ARROW } from \"@angular/cdk/keycodes\";\r\nimport {\r\n  AfterContentInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output\r\n} from \"@angular/core\";\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  NG_VALIDATORS,\r\n  NG_VALUE_ACCESSOR,\r\n  ValidationErrors,\r\n  Validator,\r\n  ValidatorFn,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport { MAT_INPUT_VALUE_ACCESSOR } from \"@angular/material/input\";\r\nimport { MatFormField } from \"@angular/material/form-field\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { DatetimeAdapter } from \"../adapter/datetime-adapter\";\r\nimport {\r\n  MAT_DATETIME_FORMATS,\r\n  MatDatetimeFormats\r\n} from \"../adapter/datetime-formats\";\r\nimport { MatDatetimepicker } from \"./datetimepicker\";\r\nimport { createMissingDateImplError } from \"./datetimepicker-errors\";\r\nimport { MatDatetimepickerFilterType } from \"./datetimepicker-filtertype\";\r\n\r\n// tslint:disable no-use-before-declare\r\n\r\nexport const MAT_DATETIMEPICKER_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MatDatetimepickerInput),\r\n  multi: true\r\n};\r\n\r\nexport const MAT_DATETIMEPICKER_VALIDATORS: any = {\r\n  provide: NG_VALIDATORS,\r\n  useExisting: forwardRef(() => MatDatetimepickerInput),\r\n  multi: true\r\n};\r\n\r\n/**\r\n * An event used for datepicker input and change events. We don't always have access to a native\r\n * input or change event because the event may have been triggered by the user clicking on the\r\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\r\n */\r\nexport class MatDatetimepickerInputEvent<D> {\r\n  /** The new value for the target datepicker input. */\r\n  value: D | null;\r\n\r\n  constructor(public target: MatDatetimepickerInput<D>, public targetElement: HTMLElement) {\r\n    this.value = this.target.value;\r\n  }\r\n}\r\n\r\n/** Directive used to connect an input to a MatDatepicker. */\r\n@Directive({\r\n  selector: \"input[matDatetimepicker]\",\r\n  providers: [\r\n    MAT_DATETIMEPICKER_VALUE_ACCESSOR,\r\n    MAT_DATETIMEPICKER_VALIDATORS,\r\n    {provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatetimepickerInput},\r\n  ],\r\n  host: {\r\n    \"[attr.aria-haspopup]\": \"true\",\r\n    \"[attr.aria-owns]\": \"(_datepicker?.opened && _datepicker.id) || null\",\r\n    \"[attr.min]\": \"min ? _dateAdapter.toIso8601(min) : null\",\r\n    \"[attr.max]\": \"max ? _dateAdapter.toIso8601(max) : null\",\r\n    \"[disabled]\": \"disabled\",\r\n    \"(focus)\": \"_datepicker._handleFocus()\",\r\n    \"(input)\": \"_onInput($event.target.value)\",\r\n    \"(change)\": \"_onChange()\",\r\n    \"(blur)\": \"_onBlur()\",\r\n    \"(keydown)\": \"_onKeydown($event)\"\r\n  },\r\n  exportAs: \"matDatepickerInput\"\r\n})\r\nexport class MatDatetimepickerInput<D> implements AfterContentInit, ControlValueAccessor, OnDestroy,\r\n  Validator {\r\n  /** The datepicker that this input is associated with. */\r\n  @Input()\r\n  set matDatetimepicker(value: MatDatetimepicker<D>) {\r\n    this.registerDatepicker(value);\r\n  }\r\n\r\n  _datepicker: MatDatetimepicker<D>;\r\n\r\n  private registerDatepicker(value: MatDatetimepicker<D>) {\r\n    if (value) {\r\n      this._datepicker = value;\r\n      this._datepicker._registerInput(this);\r\n    }\r\n  }\r\n\r\n  @Input() set matDatepickerFilter(filter: (date: D | null, type: MatDatetimepickerFilterType) => boolean) {\r\n    this._dateFilter = filter;\r\n    this._validatorOnChange();\r\n  }\r\n\r\n  _dateFilter: (date: D | null, type: MatDatetimepickerFilterType) => boolean;\r\n\r\n  /** The value of the input. */\r\n  @Input()\r\n  get value(): D | null {\r\n    return this._value;\r\n  }\r\n\r\n  set value(value: D | null) {\r\n    value = this._dateAdapter.deserialize(value);\r\n    this._lastValueValid = !value || this._dateAdapter.isValid(value);\r\n    value = this._dateAdapter.getValidDateOrNull(value);\r\n    const oldDate = this.value;\r\n    this._value = value;\r\n    this._formatValue(value);\r\n\r\n    // use timeout to ensure the datetimepicker is instantiated and we get the correct format\r\n    setTimeout(() => {\r\n      if (!this._dateAdapter.sameDatetime(oldDate, value)) {\r\n        this._valueChange.emit(value);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getDisplayFormat() {\r\n    switch (this._datepicker.type) {\r\n      case \"date\":\r\n        return this._dateFormats.display.dateInput;\r\n      case \"datetime\":\r\n        return this._dateFormats.display.datetimeInput;\r\n      case \"time\":\r\n        return this._dateFormats.display.timeInput;\r\n      case \"month\":\r\n        return this._dateFormats.display.monthInput;\r\n    }\r\n  }\r\n\r\n  private getParseFormat() {\r\n    let parseFormat;\r\n\r\n    switch (this._datepicker.type) {\r\n      case \"date\":\r\n        parseFormat = this._dateFormats.parse.dateInput;\r\n        break;\r\n      case \"datetime\":\r\n        parseFormat = this._dateFormats.parse.datetimeInput;\r\n        break;\r\n      case \"time\":\r\n        parseFormat = this._dateFormats.parse.timeInput;\r\n        break;\r\n      case \"month\":\r\n        parseFormat = this._dateFormats.parse.monthInput;\r\n        break;\r\n    }\r\n    if (!parseFormat) {\r\n      parseFormat = this._dateFormats.parse.dateInput;\r\n    }\r\n\r\n    return parseFormat;\r\n  }\r\n\r\n  private _value: D | null;\r\n\r\n  /** The minimum valid date. */\r\n  @Input()\r\n  get min(): D | null {\r\n    return this._min;\r\n  }\r\n\r\n  set min(value: D | null) {\r\n    this._min = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    this._validatorOnChange();\r\n  }\r\n\r\n  private _min: D | null;\r\n\r\n  /** The maximum valid date. */\r\n  @Input()\r\n  get max(): D | null {\r\n    return this._max;\r\n  }\r\n\r\n  set max(value: D | null) {\r\n    this._max = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    this._validatorOnChange();\r\n  }\r\n\r\n  private _max: D | null;\r\n\r\n  /** Whether the datepicker-input is disabled. */\r\n  @Input()\r\n  get disabled() {\r\n    return !!this._disabled;\r\n  }\r\n\r\n  set disabled(value: any) {\r\n    const newValue = coerceBooleanProperty(value);\r\n\r\n    if (this._disabled !== newValue) {\r\n      this._disabled = newValue;\r\n      this._disabledChange.emit(newValue);\r\n    }\r\n  }\r\n\r\n  private _disabled: boolean;\r\n\r\n  /** Emits when a `change` event is fired on this `<input>`. */\r\n  @Output() dateChange = new EventEmitter<MatDatetimepickerInputEvent<D>>();\r\n\r\n  /** Emits when an `input` event is fired on this `<input>`. */\r\n  @Output() dateInput = new EventEmitter<MatDatetimepickerInputEvent<D>>();\r\n\r\n  /** Emits when the value changes (either due to user input or programmatic change). */\r\n  _valueChange = new EventEmitter<D | null>();\r\n\r\n  /** Emits when the disabled state has changed */\r\n  _disabledChange = new EventEmitter<boolean>();\r\n\r\n  _onTouched = () => {\r\n  }\r\n\r\n  private _cvaOnChange: (value: any) => void = () => {\r\n  }\r\n\r\n  private _validatorOnChange = () => {\r\n  }\r\n\r\n  private _datepickerSubscription = Subscription.EMPTY;\r\n\r\n  private _localeSubscription = Subscription.EMPTY;\r\n\r\n  /** The form control validator for whether the input parses. */\r\n  private _parseValidator: ValidatorFn = (): ValidationErrors | null => {\r\n    return this._lastValueValid ?\r\n      null : {\"matDatepickerParse\": {\"text\": this._elementRef.nativeElement.value}};\r\n  }\r\n\r\n  /** The form control validator for the min date. */\r\n  private _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\r\n    const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\r\n    return (!this.min || !controlValue ||\r\n      this._dateAdapter.compareDatetime(this.min, controlValue) <= 0) ?\r\n      null : {\"matDatepickerMin\": {\"min\": this.min, \"actual\": controlValue}};\r\n  }\r\n\r\n  /** The form control validator for the max date. */\r\n  private _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\r\n    const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\r\n    return (!this.max || !controlValue ||\r\n      this._dateAdapter.compareDatetime(this.max, controlValue) >= 0) ?\r\n      null : {\"matDatepickerMax\": {\"max\": this.max, \"actual\": controlValue}};\r\n  }\r\n\r\n  /** The form control validator for the date filter. */\r\n  private _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\r\n    const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\r\n    return !this._dateFilter || !controlValue || this._dateFilter(controlValue, MatDatetimepickerFilterType.DATE) ?\r\n      null : {\"matDatepickerFilter\": true};\r\n  }\r\n\r\n  /** The combined form control validator for this input. */\r\n  private _validator: ValidatorFn | null =\r\n    Validators.compose(\r\n      [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\r\n\r\n  /** Whether the last value set on the input was valid. */\r\n  private _lastValueValid = false;\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              @Optional() public _dateAdapter: DatetimeAdapter<D>,\r\n              @Optional() @Inject(MAT_DATETIME_FORMATS) private _dateFormats: MatDatetimeFormats,\r\n              @Optional() private _formField: MatFormField) {\r\n    if (!this._dateAdapter) {\r\n      throw createMissingDateImplError(\"DatetimeAdapter\");\r\n    }\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError(\"MAT_DATETIME_FORMATS\");\r\n    }\r\n\r\n    // Update the displayed date when the locale changes.\r\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\r\n      this.value = this.value;\r\n    });\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this._datepicker) {\r\n      // tslint:disable-next-line deprecation\r\n      this._datepickerSubscription = this._datepicker.selectedChanged.subscribe((selected: D) => {\r\n          this.value = selected;\r\n          this._cvaOnChange(selected);\r\n          this._onTouched();\r\n          this.dateInput.emit(new MatDatetimepickerInputEvent(this, this._elementRef.nativeElement));\r\n          this.dateChange.emit(new MatDatetimepickerInputEvent(this, this._elementRef.nativeElement));\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._datepickerSubscription.unsubscribe();\r\n    this._localeSubscription.unsubscribe();\r\n    this._valueChange.complete();\r\n    this._disabledChange.complete();\r\n  }\r\n\r\n  registerOnValidatorChange(fn: () => void): void {\r\n    this._validatorOnChange = fn;\r\n  }\r\n\r\n  validate(c: AbstractControl): ValidationErrors | null {\r\n    return this._validator ? this._validator(c) : null;\r\n  }\r\n\r\n  /**\r\n   * Gets the element that the datepicker popup should be connected to.\r\n   * @return The element to connect the popup to.\r\n   */\r\n  getPopupConnectionElementRef(): ElementRef {\r\n    return this._formField ? this._formField.underlineRef : this._elementRef;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor\r\n  writeValue(value: D): void {\r\n    this.value = value;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor\r\n  registerOnChange(fn: (value: any) => void): void {\r\n    this._cvaOnChange = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor\r\n  registerOnTouched(fn: () => void): void {\r\n    this._onTouched = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor\r\n  setDisabledState(disabled: boolean): void {\r\n    this.disabled = disabled;\r\n  }\r\n\r\n  _onKeydown(event: KeyboardEvent) {\r\n    if (event.altKey && event.keyCode === DOWN_ARROW) {\r\n      this._datepicker.open();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  _onInput(value: string) {\r\n    let date = this._dateAdapter.parse(value, this.getParseFormat());\r\n    this._lastValueValid = !date || this._dateAdapter.isValid(date);\r\n    date = this._dateAdapter.getValidDateOrNull(date);\r\n    this._value = date;\r\n    this._cvaOnChange(date);\r\n    this._valueChange.emit(date);\r\n    this.dateInput.emit(new MatDatetimepickerInputEvent(this, this._elementRef.nativeElement));\r\n  }\r\n\r\n  _onChange() {\r\n    this.dateChange.emit(new MatDatetimepickerInputEvent(this, this._elementRef.nativeElement));\r\n  }\r\n\r\n  /** Handles blur events on the input. */\r\n  _onBlur() {\r\n    // Reformat the input only if we have a valid value.\r\n    if (this.value) {\r\n      this._formatValue(this.value);\r\n    }\r\n\r\n    this._onTouched();\r\n  }\r\n\r\n   /** Formats a value and sets it on the input element. */\r\n   private _formatValue(value: D | null) {\r\n     this._elementRef.nativeElement.value =\r\n       value ? this._dateAdapter.format(value, this.getDisplayFormat()) : \"\";\r\n   }\r\n}\r\n","import { coerceBooleanProperty } from \"@angular/cdk/coercion\";\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  ViewEncapsulation\r\n} from \"@angular/core\";\r\nimport { MatDatepickerIntl } from \"@angular/material/datepicker\";\r\nimport { merge, of as observableOf, Subscription } from \"rxjs\";\r\nimport { MatDatetimepicker } from \"./datetimepicker\";\r\n\r\n@Component({\r\n  selector: \"mat-datetimepicker-toggle\",\r\n  templateUrl: \"datetimepicker-toggle.html\",\r\n  host: {\r\n    \"class\": \"mat-datetimepicker-toggle\"\r\n  },\r\n  exportAs: \"matDatetimepickerToggle\",\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatDatetimepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\r\n  private _stateChanges = Subscription.EMPTY;\r\n\r\n  /** Datepicker instance that the button will toggle. */\r\n  @Input(\"for\") datetimepicker: MatDatetimepicker<D>;\r\n\r\n  /** Whether the toggle button is disabled. */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled === undefined ? this.datetimepicker.disabled : !!this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n  }\r\n  private _disabled: boolean;\r\n\r\n  constructor(public _intl: MatDatepickerIntl, private _changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.datepicker) {\r\n      this._watchStateChanges();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._stateChanges.unsubscribe();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._watchStateChanges();\r\n  }\r\n\r\n  _open(event: Event): void {\r\n    if (this.datetimepicker && !this.disabled) {\r\n      this.datetimepicker.open();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  private _watchStateChanges() {\r\n    const datepickerDisabled = this.datetimepicker ? this.datetimepicker._disabledChange : observableOf();\r\n    const inputDisabled = this.datetimepicker && this.datetimepicker._datepickerInput ?\r\n        this.datetimepicker._datepickerInput._disabledChange : observableOf();\r\n\r\n    this._stateChanges.unsubscribe();\r\n    this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled)\r\n        .subscribe(() => this._changeDetectorRef.markForCheck());\r\n  }\r\n}\r\n","/* tslint:disable */\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  Optional,\r\n  Output,\r\n  ViewEncapsulation\r\n} from \"@angular/core\";\r\nimport {\r\n  MAT_DATETIME_FORMATS,\r\n  MatDatetimeFormats\r\n} from \"../adapter/datetime-formats\";\r\nimport {\r\n  DatetimeAdapter\r\n} from \"../adapter/datetime-adapter\";\r\nimport { MatDatetimepickerCalendarCell } from \"./calendar-body\";\r\nimport { slideCalendar } from \"./datetimepicker-animations\";\r\nimport { createMissingDateImplError } from \"./datetimepicker-errors\";\r\n\r\nconst DAYS_PER_WEEK = 7;\r\n\r\n/**\r\n * An internal component used to display a single month in the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: \"mat-datetimepicker-month-view\",\r\n  templateUrl: \"month-view.html\",\r\n  animations: [slideCalendar],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatDatetimepickerMonthView<D> implements AfterContentInit {\r\n\r\n  @Input() type: \"date\" | \"time\" | \"month\" | \"datetime\" = \"date\";\r\n\r\n  @Output() _userSelection = new EventEmitter<void>();\r\n\r\n  /**\r\n   * The date to display in this month view (everything other than the month and year is ignored).\r\n   */\r\n  @Input()\r\n  get activeDate(): D {\r\n    return this._activeDate;\r\n  }\r\n\r\n  set activeDate(value: D) {\r\n    let oldActiveDate = this._activeDate;\r\n    this._activeDate = value || this._adapter.today();\r\n    if (oldActiveDate && this._activeDate &&\r\n      !this._adapter.sameMonthAndYear(oldActiveDate, this._activeDate)) {\r\n      this._init();\r\n      if (this._adapter.isInNextMonth(oldActiveDate, this._activeDate)) {\r\n        this.calendarState(\"right\");\r\n      } else {\r\n        this.calendarState(\"left\");\r\n      }\r\n    }\r\n  }\r\n\r\n  private _activeDate: D;\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: D) {\r\n    this._selected = value;\r\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\r\n  }\r\n\r\n  private _selected: D;\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D) => boolean;\r\n\r\n  /** Emits when a new date is selected. */\r\n  @Output() selectedChange = new EventEmitter<D>();\r\n\r\n  /** Grid of calendar cells representing the dates of the month. */\r\n  _weeks: MatDatetimepickerCalendarCell[][];\r\n\r\n  /** The number of blank cells in the first row before the 1st of the month. */\r\n  _firstWeekOffset: number;\r\n\r\n  /**\r\n   * The date of the month that the currently selected Date falls on.\r\n   * Null if the currently selected Date is in another month.\r\n   */\r\n  _selectedDate: number;\r\n\r\n  /** The date of the month that today falls on. Null if today is in another month. */\r\n  _todayDate: number;\r\n\r\n  /** The names of the weekdays. */\r\n  _weekdays: { long: string, narrow: string }[];\r\n\r\n  _calendarState: string;\r\n\r\n  constructor(@Optional() public _adapter: DatetimeAdapter<D>,\r\n              @Optional() @Inject(MAT_DATETIME_FORMATS) private _dateFormats: MatDatetimeFormats) {\r\n    if (!this._adapter) {\r\n      throw createMissingDateImplError(\"DatetimeAdapter\");\r\n    }\r\n\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError(\"MAT_DATETIME_FORMATS\");\r\n    }\r\n\r\n    const firstDayOfWeek = this._adapter.getFirstDayOfWeek();\r\n    const narrowWeekdays = this._adapter.getDayOfWeekNames(\"narrow\");\r\n    const longWeekdays = this._adapter.getDayOfWeekNames(\"long\");\r\n\r\n    // Rotate the labels for days of the week based on the configured first day of the week.\r\n    let weekdays = longWeekdays.map((long, i) => {\r\n      return {long, narrow: narrowWeekdays[i]};\r\n    });\r\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\r\n\r\n    this._activeDate = this._adapter.today();\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this._init();\r\n  }\r\n\r\n  /** Handles when a new date is selected. */\r\n  _dateSelected(date: number) {\r\n    const userSelected = this._adapter.createDatetime(\r\n      this._adapter.getYear(this.activeDate), this._adapter.getMonth(this.activeDate),\r\n      date, this._adapter.getHour(this.activeDate),\r\n      this._adapter.getMinute(this.activeDate));\r\n\r\n    this.selected = userSelected;\r\n    this.selectedChange.emit(userSelected);\r\n  }\r\n\r\n  /** Initializes this month view. */\r\n  private _init() {\r\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\r\n    this._todayDate = this._getDateInCurrentMonth(this._adapter.today());\r\n\r\n    let firstOfMonth = this._adapter.createDatetime(this._adapter.getYear(this.activeDate),\r\n      this._adapter.getMonth(this.activeDate), 1,\r\n      this._adapter.getHour(this.activeDate),\r\n      this._adapter.getMinute(this.activeDate));\r\n    this._firstWeekOffset =\r\n      (DAYS_PER_WEEK + this._adapter.getDayOfWeek(firstOfMonth) -\r\n        this._adapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\r\n\r\n    this._createWeekCells();\r\n  }\r\n\r\n  /** Creates MdCalendarCells for the dates in this month. */\r\n  private _createWeekCells() {\r\n    let daysInMonth = this._adapter.getNumDaysInMonth(this.activeDate);\r\n    let dateNames = this._adapter.getDateNames();\r\n    this._weeks = [[]];\r\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++ , cell++) {\r\n      if (cell == DAYS_PER_WEEK) {\r\n        this._weeks.push([]);\r\n        cell = 0;\r\n      }\r\n      let date = this._adapter.createDatetime(\r\n        this._adapter.getYear(this.activeDate),\r\n        this._adapter.getMonth(this.activeDate), i + 1,\r\n        this._adapter.getHour(this.activeDate),\r\n        this._adapter.getMinute(this.activeDate));\r\n      let enabled = !this.dateFilter ||\r\n        this.dateFilter(date);\r\n      let ariaLabel = this._adapter.format(date, this._dateFormats.display.dateA11yLabel);\r\n      this._weeks[this._weeks.length - 1]\r\n        .push(new MatDatetimepickerCalendarCell(i + 1, dateNames[i], ariaLabel, enabled));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the date in this month that the given Date falls on.\r\n   * Returns null if the given Date is in another month.\r\n   */\r\n  private _getDateInCurrentMonth(date: D): number {\r\n    return this._adapter.sameMonthAndYear(date, this.activeDate) ?\r\n      this._adapter.getDate(date) : null;\r\n  }\r\n\r\n  private calendarState(direction: string): void {\r\n    this._calendarState = direction;\r\n  }\r\n\r\n  _calendarStateDone() {\r\n    this._calendarState = \"\";\r\n  }\r\n\r\n}\r\n","/* tslint:disable */\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  Optional,\r\n  Output,\r\n  ViewEncapsulation\r\n} from \"@angular/core\";\r\nimport { createMissingDateImplError } from \"./datetimepicker-errors\";\r\nimport { MatDatetimepickerCalendarCell } from \"./calendar-body\";\r\nimport { slideCalendar } from \"./datetimepicker-animations\";\r\nimport {\r\n  MAT_DATETIME_FORMATS,\r\n  MatDatetimeFormats\r\n} from \"../adapter/datetime-formats\";\r\nimport {\r\n  DatetimeAdapter\r\n} from \"../adapter/datetime-adapter\";\r\n\r\n/**\r\n * An internal component used to display a single year in the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: \"mat-datetimepicker-year-view\",\r\n  templateUrl: \"year-view.html\",\r\n  animations: [slideCalendar],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatDatetimepickerYearView<D> implements AfterContentInit {\r\n\r\n  @Output() _userSelection = new EventEmitter<void>();\r\n\r\n  @Input() type: \"date\" | \"time\" | \"month\" | \"datetime\" = \"date\";\r\n\r\n  /** The date to display in this year view (everything other than the year is ignored). */\r\n  @Input()\r\n  get activeDate(): D {\r\n    return this._activeDate;\r\n  }\r\n\r\n  set activeDate(value: D) {\r\n    let oldActiveDate = this._activeDate;\r\n    this._activeDate = value || this._adapter.today();\r\n    if (oldActiveDate && this._activeDate &&\r\n      !this._adapter.sameYear(oldActiveDate, this._activeDate)) {\r\n      this._init();\r\n      // if (oldActiveDate < this._activeDate) {\r\n      //  this.calendarState('right');\r\n      // } else {\r\n      //  this.calendarState('left');\r\n      // }\r\n    }\r\n  }\r\n\r\n  private _activeDate: D;\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: D) {\r\n    this._selected = value;\r\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\r\n  }\r\n\r\n  private _selected: D;\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D) => boolean;\r\n\r\n  /** Emits when a new month is selected. */\r\n  @Output() selectedChange = new EventEmitter<D>();\r\n\r\n  /** Grid of calendar cells representing the months of the year. */\r\n  _months: MatDatetimepickerCalendarCell[][];\r\n\r\n  /** The label for this year (e.g. \"2017\"). */\r\n  _yearLabel: string;\r\n\r\n  /** The month in this year that today falls on. Null if today is in a different year. */\r\n  _todayMonth: number;\r\n\r\n  /**\r\n   * The month in this year that the selected Date falls on.\r\n   * Null if the selected Date is in a different year.\r\n   */\r\n  _selectedMonth: number;\r\n\r\n  _calendarState: string;\r\n\r\n  constructor(@Optional() public _adapter: DatetimeAdapter<D>,\r\n              @Optional() @Inject(MAT_DATETIME_FORMATS) private _dateFormats: MatDatetimeFormats) {\r\n    if (!this._adapter) {\r\n      throw createMissingDateImplError(\"DatetimeAdapter\");\r\n    }\r\n\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError(\"MAT_DATETIME_FORMATS\");\r\n    }\r\n\r\n    this._activeDate = this._adapter.today();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._init();\r\n  }\r\n\r\n  /** Handles when a new month is selected. */\r\n  _monthSelected(month: number) {\r\n    const userSelected = this._adapter.createDatetime(\r\n      this._adapter.getYear(this.activeDate), month,\r\n      this._adapter.getDate(this.activeDate),\r\n      this._adapter.getHour(this.activeDate),\r\n      this._adapter.getMinute(this.activeDate));\r\n\r\n    this.selectedChange.emit(userSelected);\r\n    this.selected = userSelected;\r\n    this._selectedMonth = month;\r\n  }\r\n\r\n  /** Initializes this month view. */\r\n  private _init() {\r\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\r\n    this._todayMonth = this._getMonthInCurrentYear(this._adapter.today());\r\n    this._yearLabel = this._adapter.getYearName(this.activeDate);\r\n\r\n    let monthNames = this._adapter.getMonthNames(\"short\");\r\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\r\n    this._months = [[0, 1, 2, 3, 4], [5, 6, 7, 8, 9, 10, 11]].map(row => row.map(\r\n      month => this._createCellForMonth(month, monthNames[month])));\r\n  }\r\n\r\n  /**\r\n   * Gets the month in this year that the given Date falls on.\r\n   * Returns null if the given Date is in another year.\r\n   */\r\n  private _getMonthInCurrentYear(date: D) {\r\n    return this._adapter.sameYear(date, this.activeDate) ?\r\n      this._adapter.getMonth(date) : null;\r\n  }\r\n\r\n  /** Creates an MdCalendarCell for the given month. */\r\n  private _createCellForMonth(month: number, monthName: string) {\r\n    let ariaLabel = this._adapter.format(\r\n      this._adapter.createDatetime(this._adapter.getYear(this.activeDate), month, 1,\r\n        this._adapter.getHour(this.activeDate),\r\n        this._adapter.getMinute(this.activeDate)),\r\n      this._dateFormats.display.monthYearA11yLabel);\r\n    return new MatDatetimepickerCalendarCell(\r\n      month, monthName.toLocaleUpperCase(), ariaLabel, this._isMonthEnabled(month));\r\n  }\r\n\r\n  /** Whether the given month is enabled. */\r\n  private _isMonthEnabled(month: number) {\r\n    if (!this.dateFilter) {\r\n      return true;\r\n    }\r\n\r\n    let firstOfMonth = this._adapter.createDatetime(\r\n      this._adapter.getYear(this.activeDate), month, 1,\r\n      this._adapter.getHour(this.activeDate),\r\n      this._adapter.getMinute(this.activeDate));\r\n\r\n    // If any date in the month is enabled count the month as enabled.\r\n    for (let date = firstOfMonth; this._adapter.getMonth(date) == month;\r\n         date = this._adapter.addCalendarDays(date, 1)) {\r\n      if (this.dateFilter(date)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // private calendarState(direction: string): void {\r\n  //   this._calendarState = direction;\r\n  // }\r\n\r\n  _calendarStateDone() {\r\n    this._calendarState = \"\";\r\n  }\r\n}\r\n","import { A11yModule } from \"@angular/cdk/a11y\";\r\nimport { OverlayModule } from \"@angular/cdk/overlay\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatDatetimepickerCalendar } from \"./calendar\";\r\nimport { MatDatetimepickerCalendarBody } from \"./calendar-body\";\r\nimport { MatDatetimepickerClock } from \"./clock\";\r\nimport {\r\n  MatDatetimepicker,\r\n  MatDatetimepickerContent\r\n} from \"./datetimepicker\";\r\nimport { MatDatetimepickerInput } from \"./datetimepicker-input\";\r\nimport { MatDatetimepickerToggle } from \"./datetimepicker-toggle\";\r\nimport { MatDatetimepickerMonthView } from \"./month-view\";\r\nimport { MatDatetimepickerYearView } from \"./year-view\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatIconModule,\r\n    OverlayModule,\r\n    A11yModule\r\n  ],\r\n  entryComponents: [\r\n    MatDatetimepickerContent\r\n  ],\r\n  declarations: [\r\n    MatDatetimepickerCalendar,\r\n    MatDatetimepickerCalendarBody,\r\n    MatDatetimepickerClock,\r\n    MatDatetimepicker,\r\n    MatDatetimepickerToggle,\r\n    MatDatetimepickerInput,\r\n    MatDatetimepickerContent,\r\n    MatDatetimepickerMonthView,\r\n    MatDatetimepickerYearView\r\n  ],\r\n  exports: [\r\n    MatDatetimepickerCalendar,\r\n    MatDatetimepickerCalendarBody,\r\n    MatDatetimepickerClock,\r\n    MatDatetimepicker,\r\n    MatDatetimepickerToggle,\r\n    MatDatetimepickerInput,\r\n    MatDatetimepickerContent,\r\n    MatDatetimepickerMonthView,\r\n    MatDatetimepickerYearView\r\n  ]\r\n})\r\nexport class MatDatetimepickerModule {\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {slideCalendar as ɵa} from './datetimepicker/datetimepicker-animations';"],"names":["observableOf"],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAEiD,mCAAc;IAE7D,yBAAsB,SAAyB;QAA/C,YACE,iBAAO,SACR;QAFqB,eAAS,GAAT,SAAS,CAAgB;;KAE9C;IAoBD,4CAAkB,GAAlB,UAAmB,GAAQ;QACzB,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC;KACrE;IAED,yCAAe,GAAf,UAAgB,KAAQ,EAAE,MAAS;QACjC,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC;YACpC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;YAC1C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;KAClD;IAED,sCAAY,GAAZ,UAAa,KAAe,EAAE,MAAgB;QAC5C,IAAI,KAAK,IAAI,MAAM,EAAE;YACnB,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACvC,IAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACzC,IAAI,UAAU,IAAI,WAAW,EAAE;gBAC7B,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;aAC7C;YACD,OAAO,UAAU,KAAK,WAAW,CAAC;SACnC;QACD,OAAO,KAAK,KAAK,MAAM,CAAC;KACzB;IAED,kCAAQ,GAAR,UAAS,KAAQ,EAAE,MAAS;QAC1B,OAAO,KAAK,IAAI,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;KACxE;IAED,iCAAO,GAAP,UAAQ,KAAQ,EAAE,MAAS;QACzB,OAAO,KAAK,IAAI,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;KAChH;IAED,kCAAQ,GAAR,UAAS,KAAQ,EAAE,MAAS;QAC1B,OAAO,KAAK,IAAI,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;KACvG;IAED,oCAAU,GAAV,UAAW,KAAQ,EAAE,MAAS;QAC5B,OAAO,KAAK,IAAI,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;KAC5G;IAED,0CAAgB,GAAhB,UAAiB,KAAe,EAAE,MAAgB;QAChD,IAAI,KAAK,IAAI,MAAM,EAAE;YACnB,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACvC,IAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACzC,IAAI,UAAU,IAAI,WAAW,EAAE;gBAC7B,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;oBACjD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;aACjD;YACD,OAAO,UAAU,KAAK,WAAW,CAAC;SACnC;QACD,OAAO,KAAK,KAAK,MAAM,CAAC;KACzB;;IAGD,+BAAK,GAAL,UAAM,IAAO;QACX,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KACnC;IAED,0CAAgB,GAAhB,UAAiB,IAAO,EAAE,KAAa;QACrC,OAAO,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KACrD;IAED,2CAAiB,GAAjB,UAAkB,IAAO,EAAE,MAAc;QACvC,OAAO,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KACvD;IAED,yCAAe,GAAf,UAAgB,IAAO,EAAE,IAAY;QACnC,OAAO,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KACnD;IAED,iCAAO,GAAP,UAAQ,IAAO;QACb,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KACrC;IAED,kCAAQ,GAAR,UAAS,IAAO;QACd,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KACtC;IAED,iCAAO,GAAP,UAAQ,IAAO;QACb,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KACrC;IAED,sCAAY,GAAZ,UAAa,IAAO;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC1C;IAED,uCAAa,GAAb,UAAc,KAAK;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;KAC5C;IAED,sCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;KACtC;IAED,2CAAiB,GAAjB,UAAkB,KAAK;QACrB,OAAO,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;KAChD;IAED,qCAAW,GAAX,UAAY,IAAO;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KACzC;IAED,2CAAiB,GAAjB;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC;KAC3C;IAED,2CAAiB,GAAjB,UAAkB,IAAO;QACvB,OAAO,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;KAC/C;IAED,oCAAU,GAAV,UAAW,IAAY,EAAE,KAAa,EAAE,IAAY;QAClD,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;KACrD;IAED,+BAAK,GAAL;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KAC/B;IAED,+BAAK,GAAL,UAAM,KAAU,EAAE,WAAgB;QAChC,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;KACjD;IAED,gCAAM,GAAN,UAAO,IAAO,EAAE,aAAkB;QAChC,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;KACnD;IAED,mCAAS,GAAT,UAAU,IAAO;QACf,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KACvC;IAED,wCAAc,GAAd,UAAe,GAAQ;QACrB,OAAO,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;KAC3C;IAED,iCAAO,GAAP,UAAQ,IAAO;QACb,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KACrC;IAED,iCAAO,GAAP;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;KACjC;IAED,mCAAS,GAAT,UAAU,IAAO,EAAE,GAAc,EAAE,GAAc;QAC/C,IAAI,GAAG,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE;YAC9C,OAAO,GAAG,CAAC;SACZ;QACD,IAAI,GAAG,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE;YAC9C,OAAO,GAAG,CAAC;SACZ;QACD,OAAO,IAAI,CAAC;KACb;IACH,sBAAC;AAAD,CA7KA,CAAiD,WAAW;;ICmB/C,oBAAoB,GAAG,IAAI,cAAc,CAAqB,sBAAsB,CAAC;;SCT7D,UAAA,CAAC,IAAI,OAAA,MAAM,CAAC,CAAC,CAAC,GAAA;AADnD;AACA,IAAM,kBAAkB,GAAG,KAAK,CAAC,EAAE,KAAiB,CAAC;SAGd,UAAA,CAAC,IAAI,OAAA,MAAM,CAAC,CAAC,CAAC,GAAA;AADrD;AACA,IAAM,oBAAoB,GAAG,KAAK,CAAC,EAAE,KAAiB,CAAC;AAEvD,SAAS,KAAK,CAAI,MAAc,EAAE,aAAmC;IACnE,IAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;IAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC/B,WAAW,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;KACnC;IACD,OAAO,WAAW,CAAC;AACrB,CAAC;AAGD;IAA2C,yCAAqB;IAE9D,+BAAiD,aAAqB,EAAE,SAA4B;QAApG,YACE,kBAAM,SAAS,CAAC,SAEjB;QADC,KAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;;KAC/B;IAED,qCAAK,GAAL,UAAM,IAAU;QACd,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;KACnI;IAED,uCAAO,GAAP,UAAQ,IAAU;QAChB,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;IAED,yCAAS,GAAT,UAAU,IAAU;QAClB,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;KAC1B;IAED,6CAAa,GAAb,UAAc,SAAe,EAAE,OAAa;QAC1C,IAAM,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KAClD;IAED,8CAAc,GAAd,UAAe,IAAY,EAAE,KAAa,EAAE,IAAY,EAAE,IAAY,EAAE,MAAc;;;QAGpF,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE,EAAE;YAC3B,MAAM,KAAK,CAAC,2BAAwB,KAAK,gDAA4C,CAAC,CAAC;SACxF;QAED,IAAI,IAAI,GAAG,CAAC,EAAE;YACZ,MAAM,KAAK,CAAC,oBAAiB,IAAI,uCAAmC,CAAC,CAAC;SACvE;QAED,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,EAAE,EAAE;YACzB,MAAM,KAAK,CAAC,oBAAiB,IAAI,yCAAqC,CAAC,CAAC;SACzE;QAED,IAAI,MAAM,GAAG,CAAC,IAAI,MAAM,GAAG,EAAE,EAAE;YAC7B,MAAM,KAAK,CAAC,sBAAmB,MAAM,2CAAuC,CAAC,CAAC;SAC/E;QAED,IAAM,MAAM,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;;QAG7E,IAAI,MAAM,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAE;YAC/B,MAAM,KAAK,CAAC,oBAAiB,IAAI,kCAA2B,KAAK,QAAI,CAAC,CAAC;SACxE;QAED,OAAO,MAAM,CAAC;KACf;IAEO,kDAAkB,GAA1B,UAA2B,IAAU;QACnC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,EACxD,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;KACvC;IAED,mDAAmB,GAAnB,UAAoB,IAAU;QAC5B,IAAM,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;QAC3D,OAAO,MAAM,CAAC;KACf;IAED,4CAAY,GAAZ;QACE,OAAO,kBAAkB,CAAC;KAC3B;IAED,8CAAc,GAAd;QACE,OAAO,oBAAoB,CAAC;KAC7B;IAED,gDAAgB,GAAhB,UAAiB,IAAU,EAAE,KAAa;QACxC,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,KAAK,GAAG,EAAE,CAAC,CAAC;KACjD;IAED,iDAAiB,GAAjB,UAAkB,IAAU,EAAE,MAAc;QAC1C,IAAI,OAAO,GAAG,IAAI,CAAC,uBAAuB,CACtC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;;;;;QAMpH,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;YAC9E,OAAO,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;SACpI;QAED,OAAO,OAAO,CAAC;KAChB;IAED,+CAAe,GAAf,UAAgB,IAAU,EAAE,IAAY;QACtC,OAAO,IAAI,CAAC,uBAAuB,CAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;KACnH;IAED,gDAAgB,GAAhB,UAAiB,IAAU,EAAE,KAAa;QACxC,OAAO,IAAI,CAAC,uBAAuB,CACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAC3D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;KACrD;IAED,kDAAkB,GAAlB,UAAmB,IAAU,EAAE,OAAe;QAC5C,OAAO,IAAI,CAAC,uBAAuB,CACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAC3D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC;KACvD;IAED,yCAAS,GAAT,UAAU,IAAU;QAClB,OAAO,iBAAM,SAAS,YAAC,IAAI,CAAC,GAAG,GAAG,GAAG;YACnC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;SACnC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACb;;;;;;;;IASO,8DAA8B,GAAtC,UAAuC,GAAW;QAChD,OAAO,GAAG,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;KAC3C;;;;;;IAOO,uCAAO,GAAf,UAAgB,CAAS;QACvB,OAAO,CAAC,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KAC7B;;IAGO,uDAAuB,GAA/B,UAAgC,IAAY,EAAE,KAAa,EAAE,IAAY,EACzC,KAAa,EAAE,OAAe;QAC5D,IAAM,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;;;QAI3D,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE;YAC3B,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC;SACjD;QACD,OAAO,MAAM,CAAC;KACf;;6CAhJY,QAAQ,YAAI,MAAM,SAAC,eAAe;gBAAoC,WAAW;;IAFnF,qBAAqB;QADjC,UAAU,EAAE;QAGE,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,eAAe,CAAC,CAAA;iDAAmC,WAAW;OAFnF,qBAAqB,CAmJjC;IAAD,4BAAC;CAAA,CAnJ0C,eAAe;;ICxB7C,2BAA2B,GAAuB;IAC7D,KAAK,EAAE,EAAE;IACT,OAAO,EAAE;QACP,SAAS,EAAE,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAC;QAC9D,UAAU,EAAE,EAAC,KAAK,EAAE,MAAM,EAAC;QAC3B,aAAa,EAAE,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAC;QACtG,SAAS,EAAE,EAAC,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAC;QAC/C,cAAc,EAAE,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAC;QACjD,aAAa,EAAE,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAC;QAC/D,kBAAkB,EAAE,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAC;QACpD,oBAAoB,EAAE,EAAC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,SAAS,EAAC;KACzE;CACF;;ACJD;AAUA;IAAA;KACC;IADY,oBAAoB;QAThC,QAAQ,CAAC;YACR,OAAO,EAAE,CAAC,gBAAgB,CAAC;YAC3B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,eAAe;oBACxB,QAAQ,EAAE,qBAAqB;iBAChC;aACF;SACF,CAAC;OACW,oBAAoB,CAChC;IAAD,2BAAC;CADD,IACC;WAOuD,2BAA2B;AAEnF;IAAA;KACC;IADY,uBAAuB;QAPnC,QAAQ,CAAC;YACR,OAAO,EAAE;gBACP,oBAAoB;gBACpB,mBAAmB;aACpB;YACD,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,oBAAoB,EAAE,QAAQ,MAA6B,EAAC,CAAC;SACpF,CAAC;OACW,uBAAuB,CACnC;IAAD,8BAAC;CADD;;ACpBA;;;;;AAKA,AAAO,IAAM,aAAa,GAA6B,OAAO,CAAC,eAAe,EAAE;IAC9E,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;IACrC,UAAU,CAAC,iBAAiB,EAAE;QAC5B,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC;QACnB,OAAO,CAAC,8CAA8C,CAAC;KACxD,CAAC;CACH,CAAC,CAAC;AAEH,IAAa,aAAa,GAA6B,OAAO,CAAC,eAAe,EAAE;IAC9E,UAAU,CAAC,WAAW,EAAE;QACtB,OAAO,CAAC,GAAG,EAAE,SAAS,CAAC;YACrB,KAAK,CAAC,EAAC,SAAS,EAAE,kBAAkB,EAAE,MAAM,EAAE,GAAG,EAAC,CAAC;YACnD,KAAK,CAAC,EAAC,SAAS,EAAE,mBAAmB,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC;YACrD,KAAK,CAAC,EAAC,SAAS,EAAE,eAAe,EAAE,MAAM,EAAE,CAAC,EAAC,CAAC;SAC/C,CAAC,CAAC;KACJ,CAAC;IACF,UAAU,CAAC,YAAY,EAAE;QACvB,OAAO,CAAC,GAAG,EAAE,SAAS,CAAC;YACrB,KAAK,CAAC,EAAC,SAAS,EAAE,mBAAmB,EAAE,MAAM,EAAE,GAAG,EAAC,CAAC;YACpD,KAAK,CAAC,EAAC,SAAS,EAAE,kBAAkB,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC;YACpD,KAAK,CAAC,EAAC,SAAS,EAAE,eAAe,EAAE,MAAM,EAAE,CAAC,EAAC,CAAC;SAC/C,CAAC,CAAC;KACJ,CAAC;CACH,CAAC;;ACtCF;AACA,SAAgB,0BAA0B,CAAC,QAAgB;IACzD,OAAO,KAAK,CACR,8CAA4C,QAAQ,4CAAyC;QAC7F,mGAAmG;QACnG,wBAAwB,CAAC,CAAC;AAChC,CAAC;;ICNW,2BAEX;AAFD,WAAY,2BAA2B;IACrC,6EAAI,CAAA;IAAE,6EAAI,CAAA;IAAE,iFAAM,CAAA;AACpB,CAAC,EAFW,2BAA2B,KAA3B,2BAA2B,QAEtC;;ACoCD;;;;AAiBA;IAuIE,mCAAoB,WAAuB,EACvB,KAAwB,EACxB,OAAe,EACH,QAA4B,EACE,YAAgC,EAC1E,iBAAoC;QALxD,iBAeC;QAfmB,gBAAW,GAAX,WAAW,CAAY;QACvB,UAAK,GAAL,KAAK,CAAmB;QACxB,YAAO,GAAP,OAAO,CAAQ;QACH,aAAQ,GAAR,QAAQ,CAAoB;QACE,iBAAY,GAAZ,YAAY,CAAoB;QAC1E,sBAAiB,GAAjB,iBAAiB,CAAmB;QAxI9C,mBAAc,GAAG,IAAI,YAAY,EAAQ,CAAC;QAE3C,SAAI,GAA2C,MAAM,CAAC;;QAetD,cAAS,GAA+B,OAAO,CAAC;QAsChD,iBAAY,GAAW,CAAC,CAAC;;QAMxB,mBAAc,GAAG,IAAI,YAAY,EAAK,CAAC;;QAGjD,wBAAmB,GAAG,UAAC,IAAO;YAC5B,OAAO,CAAC,CAAC,IAAI;iBACV,CAAC,KAAI,CAAC,UAAU,IAAI,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,2BAA2B,CAAC,IAAI,CAAC,CAAC;iBAC5E,CAAC,KAAI,CAAC,OAAO,IAAI,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;iBACpE,CAAC,KAAI,CAAC,OAAO,IAAI,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;SACzE,CAAC;;QA+BF,iBAAY,GAA+B,OAAO,CAAC;QACnD,eAAU,GAAsB,MAAM,CAAC;QAoCrC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,MAAM,0BAA0B,CAAC,iBAAiB,CAAC,CAAC;SACrD;QAED,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,MAAM,0BAA0B,CAAC,sBAAsB,CAAC,CAAC;SAC1D;QAED,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,cAAM,OAAA,iBAAiB,CAAC,YAAY,EAAE,GAAA,CAAC,CAAC;KACrF;IA5ID,sBAAI,8CAAO;;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;aAED,UAAY,KAAe;YACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;SACzD;;;OAJA;IAaD,sBAAI,+CAAQ;;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;aAED,UAAa,KAAe;YAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;SAC1D;;;OAJA;IAUD,sBAAI,8CAAO;;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;aAED,UAAY,KAAe;YACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;SACzD;;;OAJA;IAUD,sBAAI,8CAAO;;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;aAED,UAAY,KAAe;YACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;SACzD;;;OAJA;IA4BD,sBAAI,kDAAW;;;;;aAAf;YACE,OAAO,IAAI,CAAC,kBAAkB,CAAC;SAChC;aAED,UAAgB,KAAQ;YACtB,IAAM,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC;YAC9C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACrF,IAAI,aAAa,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,YAAY,KAAK,OAAO;gBAC3E,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE;gBACzE,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE;oBACvE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;iBAC7B;qBAAM;oBACL,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;iBAC5B;gBACD,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;aACxC;SACF;;;OAdA;IAkBD,iDAAa,GAAb;QACE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;KAC5B;IAOD,sBAAI,iDAAU;;aAAd;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACpD;;;OAAA;IAED,sBAAI,sDAAe;aAAnB;YACE,OAAO,IAAI,CAAC,YAAY,KAAK,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAClH,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC/C;;;OAAA;IAED,sBAAI,iDAAU;aAAd;YACE,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;gBACzB,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;aACtF;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;SAE/F;;;OAAA;IAED,sBAAI,kDAAW;aAAf;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;SAC9D;;;OAAA;IAED,sBAAI,oDAAa;aAAjB;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;SAChE;;;OAAA;IAqBD,sDAAkB,GAAlB;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACzD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;YACzB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;SAC5B;aAAM,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;YAC/B,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;SAC7B;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC;SAC/C;KACF;IAED,+CAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;;IAGD,iDAAa,GAAb,UAAc,IAAO;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;YACxB,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;SAC7B;KACF;;IAGD,kDAAc,GAAd,UAAe,KAAQ;QACrB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;YACzB,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;SAC1B;KACF;IAED,iDAAa,GAAb,UAAc,IAAO;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;KAC5B;IAGD,wDAAoB,GAApB,UAAqB,KAAK;QACxB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC3C,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAGD,uDAAmB,GAAnB,UAAoB,KAAK;;QAEvB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;KAE5B;IAED,uDAAmB,GAAnB,UAAoB,IAAO;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KACzB;IAED,gDAAY,GAAZ;QACE,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;KAC5B;IAED,gDAAY,GAAZ;QACE,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;YACzB,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;SAC7B;KACF;IAED,iDAAa,GAAb;QACE,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;KAC1B;IAED,mDAAe,GAAf;QACE,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;KAC5B;;IAGD,oDAAgB,GAAhB;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,KAAK,OAAO;YAC9C,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;KACxD;;IAGD,gDAAY,GAAZ;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,KAAK,OAAO;YAC9C,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;YACpD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;KACvD;;IAGD,oDAAgB,GAAhB;QACE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO,IAAI,CAAC;SACb;QACD,OAAO,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KAC3E;;IAGD,gDAAY,GAAZ;QACE,OAAO,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KAC3E;;IAGD,8DAA0B,GAA1B,UAA2B,KAAoB;;;;QAI7C,IAAI,IAAI,CAAC,YAAY,KAAK,OAAO,EAAE;YACjC,IAAI,CAAC,qCAAqC,CAAC,KAAK,CAAC,CAAC;SACnD;aAAM,IAAI,IAAI,CAAC,YAAY,KAAK,MAAM,EAAE;YACvC,IAAI,CAAC,oCAAoC,CAAC,KAAK,CAAC,CAAC;SAClD;aAAM;YACL,IAAI,CAAC,qCAAqC,CAAC,KAAK,CAAC,CAAC;SACnD;KACF;IAED,oDAAgB,GAAhB;QAAA,iBAMC;QALC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;YAC7B,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,SAAS,CAAC;gBAC3D,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;aACxC,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;;IAGO,+CAAW,GAAnB,UAAoB,KAAQ,EAAE,KAAQ;QACpC,OAAO,IAAI,CAAC,YAAY,KAAK,OAAO;YAClC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC;gBAC5D,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC;YAC9D,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KAChE;;IAGO,yEAAqC,GAA7C,UAA8C,KAAoB;QAChE,QAAQ,KAAK,CAAC,OAAO;YACnB,KAAK,UAAU;gBACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;gBACvE,MAAM;YACR,KAAK,WAAW;gBACd,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;gBACtE,MAAM;YACR,KAAK,QAAQ;gBACX,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;gBACvE,MAAM;YACR,KAAK,UAAU;gBACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;gBACtE,MAAM;YACR,KAAK,IAAI;gBACP,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,EAC/D,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC/C,MAAM;YACR,KAAK,GAAG;gBACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,GAC9D,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC;oBAChD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;gBAC9C,MAAM;YACR,KAAK,OAAO;gBACV,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM;oBAC7B,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;oBACpD,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;gBACxD,MAAM;YACR,KAAK,SAAS;gBACZ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM;oBAC7B,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;oBACnD,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;gBACvD,MAAM;YACR,KAAK,KAAK;gBACR,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;oBAC9C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;oBAErC,KAAK,CAAC,cAAc,EAAE,CAAC;iBACxB;gBACD,OAAO;YACT;;gBAEE,OAAO;SACV;;QAGD,KAAK,CAAC,cAAc,EAAE,CAAC;KACxB;;IAGO,wEAAoC,GAA5C,UAA6C,KAAoB;QAC/D,QAAQ,KAAK,CAAC,OAAO;YACnB,KAAK,UAAU;gBACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzE,MAAM;YACR,KAAK,WAAW;gBACd,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;gBACxE,MAAM;YACR,KAAK,QAAQ;gBACX,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC9D,MAAM;YACR,KAAK,UAAU;gBACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC9D,MAAM;YACR,KAAK,IAAI;gBACP,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,EACjE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC7C,MAAM;YACR,KAAK,GAAG;gBACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,EACjE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACjD,MAAM;YACR,KAAK,OAAO;gBACV,IAAI,CAAC,WAAW;oBACd,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC5E,MAAM;YACR,KAAK,SAAS;gBACZ,IAAI,CAAC,WAAW;oBACd,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,MAAM,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;gBAC1E,MAAM;YACR,KAAK,KAAK;gBACR,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACtC,MAAM;YACR;;gBAEE,OAAO;SACV;;QAGD,KAAK,CAAC,cAAc,EAAE,CAAC;KACxB;;IAGO,yEAAqC,GAA7C,UAA8C,KAAoB;QAChE,QAAQ,KAAK,CAAC,OAAO;YACnB,KAAK,QAAQ;gBACX,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,IAAI,MAAM;oBAC1C,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;oBACnD,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;gBACxD,MAAM;YACR,KAAK,UAAU;gBACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,IAAI,MAAM;oBAC1C,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;oBACpD,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzD,MAAM;YACR,KAAK,KAAK;gBACR,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACrC,OAAO;YACT;;gBAEE,OAAO;SACV;;QAGD,KAAK,CAAC,cAAc,EAAE,CAAC;KACxB;;;;;IAMO,uDAAmB,GAA3B,UAA4B,IAAO;;;QAGjC,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACrD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;KACzD;;;;;IAMO,uDAAmB,GAA3B,UAA4B,IAAO;;;QAGjC,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;aACpD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;QAC/C,OAAO,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;KACzD;IAEO,iDAAa,GAArB,UAAsB,SAAiB;QACrC,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;KACjC;IAED,sDAAkB,GAAlB;QACE,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;KAC1B;IAEO,2CAAO,GAAf,UAAgB,CAAS;QACvB,OAAO,CAAC,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KAC7B;;gBA7SgC,UAAU;gBAChB,iBAAiB;gBACf,MAAM;gBACO,eAAe,uBAA5C,QAAQ;gDACR,QAAQ,YAAI,MAAM,SAAC,oBAAoB;gBACb,iBAAiB;;IAxI9C;QAAT,MAAM,EAAE;;qEAA2C;IAE3C;QAAR,KAAK,EAAE;;2DAAuD;IAI/D;QADC,KAAK,EAAE;;;4DAGP;IASQ;QAAR,KAAK,EAAE;;gEAAiD;IAIzD;QADC,KAAK,EAAE;;;6DAGP;IAUD;QADC,KAAK,EAAE;;;4DAGP;IAUD;QADC,KAAK,EAAE;;;4DAGP;IAQQ;QAAR,KAAK,EAAE;;mEAA0B;IAGzB;QAAR,KAAK,EAAE;;iEAAqE;IAGnE;QAAT,MAAM,EAAE;;qEAAwC;IA6HxC;QAAR,KAAK,EAAE;;yEAA4B;IAM3B;QAAR,KAAK,EAAE;;wEAA2B;IApMxB,yBAAyB;QAbrC,SAAS,CAAC;YACT,QAAQ,EAAE,6BAA6B;YACvC,68IAA4B;YAE5B,IAAI,EAAE;gBACJ,qCAAqC,EAAE,MAAM;gBAC7C,UAAU,EAAE,GAAG;gBACf,WAAW,EAAE,oCAAoC;aAClD;YACD,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;SAChD,CAAC;QA2Ia,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,oBAAoB,CAAC,CAAA;yCAJpB,UAAU;YAChB,iBAAiB;YACf,MAAM;YACO,eAAe,UAElB,iBAAiB;OA5I7C,yBAAyB,CAqbrC;IAAD,gCAAC;CArbD;;AC9CA;;;;AAIA;IACE,uCAAmB,KAAa,EACb,YAAoB,EACpB,SAAiB,EACjB,OAAgB;QAHhB,UAAK,GAAL,KAAK,CAAQ;QACb,iBAAY,GAAZ,YAAY,CAAQ;QACpB,cAAS,GAAT,SAAS,CAAQ;QACjB,YAAO,GAAP,OAAO,CAAS;KAClC;IACH,oCAAC;AAAD,CAAC,IAAA;AAED;;;;AAcA;IAAA;;QAiBW,YAAO,GAAG,CAAC,CAAC;;QAGZ,2BAAsB,GAAG,KAAK,CAAC;;QAG/B,eAAU,GAAG,CAAC,CAAC;;QAGd,wBAAmB,GAAG,IAAI,YAAY,EAAU,CAAC;KAyB5D;IAvBC,oDAAY,GAAZ,UAAa,IAAmC;QAC9C,IAAI,CAAC,IAAI,CAAC,sBAAsB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjD,OAAO;SACR;QACD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3C;IAGD,sBAAI,0DAAe;;aAAnB;YACE,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM;gBACzD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;SAC1C;;;OAAA;IAED,qDAAa,GAAb,UAAc,QAAgB,EAAE,QAAgB;QAC9C,IAAI,UAAU,GAAG,QAAQ,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;;QAGpD,IAAI,QAAQ,EAAE;YACZ,UAAU,IAAI,IAAI,CAAC,eAAe,CAAC;SACpC;QAED,OAAO,UAAU,KAAK,IAAI,CAAC,UAAU,CAAC;KACvC;IAhDQ;QAAR,KAAK,EAAE;;gEAAe;IAGd;QAAR,KAAK,EAAE;;+DAAyC;IAGxC;QAAR,KAAK,EAAE;;qEAAoB;IAGnB;QAAR,KAAK,EAAE;;wEAAuB;IAGtB;QAAR,KAAK,EAAE;;gFAA+B;IAG9B;QAAR,KAAK,EAAE;;kEAAa;IAGZ;QAAR,KAAK,EAAE;;iFAAgC;IAG/B;QAAR,KAAK,EAAE;;qEAAgB;IAGd;QAAT,MAAM,EAAE;;8EAAkD;IA1BhD,6BAA6B;QAVzC,SAAS,CAAC;YACT,QAAQ,EAAE,oCAAoC;YAC9C,+rDAAiC;YAEjC,IAAI,EAAE;gBACJ,OAAO,EAAE,kCAAkC;aAC5C;YACD,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;SAChD,CAAC;OACW,6BAA6B,CAmDzC;IAAD,oCAAC;CAnDD;;ICvBa,YAAY,GAAG,EAAE,CAAC;AAC/B,IAAa,kBAAkB,GAAG,IAAI,CAAC;AACvC,IAAa,kBAAkB,GAAG,KAAK,CAAC;AACxC,IAAa,iBAAiB,GAAG,MAAM,CAAC;AAIxC;;;;AAaA;IAoHE,gCAAoB,QAAoB,EACpB,QAA4B;QADhD,iBAQC;QARmB,aAAQ,GAAR,QAAQ,CAAY;QACpB,aAAQ,GAAR,QAAQ,CAAoB;QAnHtC,mBAAc,GAAG,IAAI,YAAY,EAAQ,CAAC;QA+C5C,iBAAY,GAAG,KAAK,CAAC;QAuBpB,aAAQ,GAAW,CAAC,CAAC;QAErB,eAAU,GAAY,KAAK,CAAC;;QAG3B,mBAAc,GAAG,IAAI,YAAY,EAAK,CAAC;QAEvC,qBAAgB,GAAG,IAAI,YAAY,EAAK,CAAC;;QAGnD,WAAM,GAAkB,EAAE,CAAC;QAC3B,aAAQ,GAAkB,EAAE,CAAC;;QAG7B,cAAS,GAAY,IAAI,CAAC;QAgCxB,IAAI,CAAC,iBAAiB,GAAG,UAAC,KAAU;YAClC,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAC9B,CAAC;QACF,IAAI,CAAC,eAAe,GAAG;YACrB,KAAI,CAAC,cAAc,EAAE,CAAC;SACvB,CAAC;KACH;IApHD,sBAAI,8CAAU;;;;aAAd;YACE,OAAO,IAAI,CAAC,WAAW,CAAC;SACzB;aAED,UAAe,KAAQ;YACrB,IAAI,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC;YACrC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE;gBAC9D,IAAI,CAAC,KAAK,EAAE,CAAC;aACd;SACF;;;OARA;IAcD,sBAAI,4CAAQ;;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;aAED,UAAa,KAAe;YAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACpF,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;aAClC;SACF;;;OAPA;IAaD,sBAAI,2CAAO;;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;aAED,UAAY,KAAe;YACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;SACpF;;;OAJA;IAYD,sBAAI,2CAAO;;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;aAED,UAAY,KAAe;YACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;SACpF;;;OAJA;IAUD,sBAAI,6CAAS;;aAAb,UAAc,KAAgB;YAC5B,IAAI,CAAC,SAAS,GAAG,KAAK,IAAI,QAAQ,CAAC;SACpC;;;OAAA;IAwBD,sBAAI,yCAAK;aAAT;YACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC5D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAChE,IAAI,GAAG,GAAG,CAAC,CAAC;YACZ,IAAI,MAAM,GAAG,kBAAkB,CAAC;YAChC,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;gBAC9D,MAAM,GAAG,KAAK,GAAG,kBAAkB,GAAG,kBAAkB,CAAC;gBACzD,IAAI,IAAI,CAAC,UAAU,EAAE;oBACnB,MAAM,GAAG,kBAAkB,CAAC;iBAC7B;gBACD,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,IAAI,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aACzD;iBAAM;gBACL,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC;aACrD;YACD,OAAO;gBACL,WAAW,EAAE,YAAU,GAAG,SAAM;gBAChC,QAAQ,EAAK,MAAM,MAAG;gBACtB,YAAY,EAAK,EAAE,GAAG,MAAM,MAAG;aAChC,CAAC;SACH;;;OAAA;IAeD,mDAAkB,GAAlB;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QAC5D,IAAI,CAAC,KAAK,EAAE,CAAC;KACd;;IAGD,iDAAgB,GAAhB,UAAiB,KAAU;QACzB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACpB,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC/D,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC/D,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QAC3D,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;KAC7D;IAED,iDAAgB,GAAhB,UAAiB,KAAU;QACzB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KACrB;IAED,+CAAc,GAAd;QACE,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAClE,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAClE,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QAC9D,QAAQ,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QAC/D,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC3C;KACF;;IAGO,sCAAK,GAAb;QACE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QAEzB,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;QAC7C,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC;QAEjD,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;gBACnD,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;gBAC7B,IAAI,MAAM,GAAG,kBAAkB,CAAC;gBAChC,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CACvC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EACtC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EACvC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;gBACpD,IAAI,OAAO,GACT,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;qBACvE,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC5E,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;oBACf,KAAK,EAAE,CAAC;oBACR,YAAY,EAAE,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC;oBAC3C,OAAO,EAAE,OAAO;oBAChB,GAAG,EAAE,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,iBAAiB;oBACjE,IAAI,EAAE,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,iBAAiB;iBACnE,CAAC,CAAC;aACJ;SACF;aAAM;YACL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;gBAC7B,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,EACzB,MAAM,GAAG,KAAK,GAAG,kBAAkB,GAAG,kBAAkB,CAAC;gBAC3D,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CACvC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EACtC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EACvC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChD,IAAI,OAAO,GACT,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;qBACvE,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;qBACxE,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,2BAA2B,CAAC,IAAI,CAAC,CAAC,CAAC;gBAChF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;oBACf,KAAK,EAAE,CAAC;oBACR,YAAY,EAAE,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC;oBAC3C,OAAO,EAAE,OAAO;oBAChB,GAAG,EAAE,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,iBAAiB;oBACjE,IAAI,EAAE,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,iBAAiB;oBAClE,QAAQ,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,KAAK;iBACvC,CAAC,CAAC;aACJ;SACF;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;YAC9C,IAAI,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;YAC9B,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CACvC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EACtC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EACvC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;YACrF,IAAI,OAAO,GACT,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;iBACvE,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;iBACxE,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,2BAA2B,CAAC,MAAM,CAAC,CAAC,CAAC;YAClF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACjB,KAAK,EAAE,CAAC;gBACR,YAAY,EAAE,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC;gBAC7C,OAAO,EAAE,OAAO;gBAChB,GAAG,EAAE,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,kBAAkB,GAAG,iBAAiB;gBAC7E,IAAI,EAAE,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,kBAAkB,GAAG,iBAAiB;aAC/E,CAAC,CAAC;SACJ;KACF;;;;;IAMO,wCAAO,GAAf,UAAgB,KAAU;QACxB,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;QAC1C,IAAI,WAAW,GAAG,OAAO,CAAC,qBAAqB,EAAE,CAAC;QAClD,IAAI,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC;QAChC,IAAI,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC;QAClC,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,KAAK,SAAS,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC7E,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,KAAK,SAAS,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC7E,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,WAAW,CAAC,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;QACtE,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK,KAAK,GAAG,WAAW,CAAC,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;QACtE,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC;QACxF,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACjC,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,kBAAkB,GAAG,GAAG,CAAC;aACnE,KAAK,IAAI,kBAAkB,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;QAE5C,IAAI,MAAM,GAAG,CAAC,EAAE;YACd,MAAM,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,MAAM,CAAC;SAC/B;QACD,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;QAEtC,IAAI,IAAI,CAAC;QACT,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,KAAK,GAAG,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;aAClC;iBAAM;gBACL,IAAI,KAAK,KAAK,EAAE,EAAE;oBAChB,KAAK,GAAG,CAAC,CAAC;iBACX;gBACD,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,KAAK,IAAI,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;aAC3E;YACD,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CACjC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EACtC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EACvC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;SAC5F;aAAM;YACL,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC;aACxB;YACD,IAAI,KAAK,KAAK,EAAE,EAAE;gBAChB,KAAK,GAAG,CAAC,CAAC;aACX;YACD,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CACjC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EACtC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EACvC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC;SAC1F;QAED,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1E,IAAI,IAAI,KAAK,OAAO,EAAE;YACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;YAC1B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC7C;KACF;;gBAxK6B,UAAU;gBACV,eAAe;;IAnHnC;QAAT,MAAM,EAAE;;kEAA2C;IAMpD;QADC,KAAK,EAAE;;;4DAGP;IAcD;QADC,KAAK,EAAE;;;0DAGP;IAaD;QADC,KAAK,EAAE;;;yDAGP;IAYD;QADC,KAAK,EAAE;;;yDAGP;IAUD;QADC,KAAK,EAAE;;;2DAGP;IAGQ;QAAR,KAAK,EAAE;;8DAAqE;IAEpE;QAAR,KAAK,EAAE;;4DAAsB;IAErB;QAAR,KAAK,EAAE;;8DAA6B;IAG3B;QAAT,MAAM,EAAE;;kEAAwC;IAEvC;QAAT,MAAM,EAAE;;oEAA0C;IA/ExC,sBAAsB;QATlC,SAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;YACpC,0qCAAyB;YAEzB,IAAI,EAAE;gBACJ,MAAM,EAAE,OAAO;gBACf,aAAa,EAAE,0BAA0B;aAC1C;;SACF,CAAC;yCAqH8B,UAAU;YACV,eAAe;OArHlC,sBAAsB,CA6RlC;IAAD,6BAAC;CA7RD;;ACQA;AACA,IAAI,iBAAiB,GAAG,CAAC,CAAC;AAE1B;;;;;;;AAmBA;IAAA;KAoBC;IAfC,qDAAkB,GAAlB;QACE,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC;KACnC;;;;;IAMD,iDAAc,GAAd,UAAe,KAAoB;QACjC,IAAI,KAAK,CAAC,OAAO,KAAK,MAAM,EAAE;YAC5B,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YAC5B,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;KACF;IAhBuD;QAAvD,SAAS,CAAC,yBAAyB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;kCAAY,yBAAyB;+DAAI;IAHrF,wBAAwB;QAZpC,SAAS,CAAC;YACT,QAAQ,EAAE,4BAA4B;YACtC,k7BAA0C;YAE1C,IAAI,EAAE;gBACJ,OAAO,EAAE,4BAA4B;gBACrC,0CAA0C,EAAE,yBAAyB;gBACrE,WAAW,EAAE,wBAAwB;aACtC;YACD,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;SAChD,CAAC;OACW,wBAAwB,CAoBpC;IAAD,+BAAC;CApBD,IAoBC;;IA0JC,2BAAoB,OAAkB,EAClB,QAAiB,EACjB,OAAe,EACf,iBAAmC,EACK,eAAe,EAC3C,YAAgC,EAChC,IAAoB,EACF,SAAc;QAP5C,YAAO,GAAP,OAAO,CAAW;QAClB,aAAQ,GAAR,QAAQ,CAAS;QACjB,YAAO,GAAP,OAAO,CAAQ;QACf,sBAAiB,GAAjB,iBAAiB,CAAkB;QACK,oBAAe,GAAf,eAAe,CAAA;QAC3C,iBAAY,GAAZ,YAAY,CAAoB;QAChC,SAAI,GAAJ,IAAI,CAAgB;QACF,cAAS,GAAT,SAAS,CAAK;;QAvIvD,cAAS,GAA+B,OAAO,CAAC;QAChD,SAAI,GAAsC,MAAM,CAAC;QACjD,iBAAY,GAAW,CAAC,CAAC;QAsB1B,UAAK,GAA2C,MAAM,CAAC;QAevD,aAAQ,GAAG,KAAK,CAAC;;;;;QAwBf,oBAAe,GAAG,IAAI,YAAY,EAAK,CAAC;QAKzC,uBAAkB,GAAG,SAAS,CAAC;QAC/B,sBAAiB,GAAG,QAAQ,CAAC;;QAGpB,iBAAY,GAAuB,IAAI,YAAY,EAAQ,CAAC;;QAG5D,iBAAY,GAAuB,IAAI,YAAY,EAAQ,CAAC;;QAG9E,WAAM,GAAG,KAAK,CAAC;;QAGf,OAAE,GAAG,wBAAsB,iBAAiB,EAAI,CAAC;QAWzC,mBAAc,GAAa,IAAI,CAAC;;QA0BhC,8BAAyB,GAAuB,IAAI,CAAC;QAErD,uBAAkB,GAAG,YAAY,CAAC,KAAK,CAAC;;QAMhD,oBAAe,GAAG,IAAI,OAAO,EAAW,CAAC;QAUvC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,MAAM,0BAA0B,CAAC,aAAa,CAAC,CAAC;SACjD;KACF;IAxJD,sBAAI,sCAAO;;aAAX;;;YAGE,OAAO,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;SACtF;aAED,UAAY,IAAc;YACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;SAC5D;;;OAJA;IAcD,sBAAI,0CAAW;aAAf,cAA6B,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE;aACxD,UAAgB,KAAc,IAAI,IAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC,EAAE;;;OAD7B;IAIxD,wCAAY,GAAZ;QACE,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,EAAE;YACpC,IAAI,CAAC,IAAI,EAAE,CAAC;SACb;KACF;IAGD,sBAAI,mCAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;aAED,UAAS,KAA6C;YACpD,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,MAAM,CAAC;SAC9B;;;OAJA;IAaD,sBAAI,sCAAO;;;;;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;aAED,UAAY,KAAc;YACxB,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;SAC9C;;;OAJA;IAUD,sBAAI,uCAAQ;;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,KAAK,SAAS,IAAI,IAAI,CAAC,gBAAgB;gBAC1D,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;SACrD;aAED,UAAa,KAAc;YACzB,IAAM,QAAQ,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;YAE9C,IAAI,QAAQ,KAAK,IAAI,CAAC,SAAS,EAAE;gBAC/B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;gBAC1B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACrC;SACF;;;OATA;IAsCD,sBAAI,wCAAS;;aAAb;YACE,OAAO,IAAI,CAAC,cAAc,CAAC;SAC5B;aAED,UAAc,KAAe;YAC3B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;SAC7B;;;OAJA;IASD,sBAAI,uCAAQ;;aAAZ;YACE,OAAO,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC;SAC3D;;;OAAA;IAGD,sBAAI,uCAAQ;;aAAZ;YACE,OAAO,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC;SAC3D;;;OAAA;IAED,sBAAI,0CAAW;aAAf;YACE,OAAO,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;SACnE;;;OAAA;IAmCD,uCAAW,GAAX;QACE,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QACtC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;QAEhC,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;SAC1B;KACF;;IAGD,mCAAO,GAAP,UAAQ,IAAO;QACb,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE;;YAE7D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjC;KACF;;;;;IAMD,0CAAc,GAAd,UAAe,KAAgC;QAA/C,iBAOC;QANC,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,MAAM,KAAK,CAAC,6DAA6D,CAAC,CAAC;SAC5E;QACD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,kBAAkB;YACrB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAe,IAAK,OAAA,KAAI,CAAC,SAAS,GAAG,KAAK,GAAA,CAAC,CAAC;KAC7F;;IAGD,gCAAI,GAAJ;QACE,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;YAChC,OAAO;SACR;QACD,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC1B,MAAM,KAAK,CAAC,8DAA8D,CAAC,CAAC;SAC7E;QACD,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;SAC/D;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAC1D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;KAC1B;;IAGD,iCAAK,GAAL;QAAA,iBAqCC;QApCC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO;SACR;QACD,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,EAAE;YAClD,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;SACzB;QACD,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;QACD,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE;YAC3D,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;SAC/B;QAED,IAAM,aAAa,GAAG;;;YAGpB,IAAI,KAAI,CAAC,MAAM,EAAE;gBACf,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;gBACzB,KAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;aACvC;SACF,CAAC;QAEF,IAAI,IAAI,CAAC,yBAAyB;YAChC,OAAO,IAAI,CAAC,yBAAyB,CAAC,KAAK,KAAK,UAAU,EAAE;;;;;;YAM5D,IAAI,CAAC,yBAAyB,CAAC,KAAK,EAAE,CAAC;YACvC,UAAU,CAAC,aAAa,CAAC,CAAC;SAC3B;aAAM;YACL,aAAa,EAAE,CAAC;SACjB;KACF;;IAGO,yCAAa,GAArB;QAAA,iBAQC;QAPC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,wBAAwB,EAAE;YAC5D,SAAS,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK;YAC9C,gBAAgB,EAAE,IAAI,CAAC,iBAAiB;YACxC,UAAU,EAAE,2BAA2B;SACxC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAE,GAAA,CAAC,CAAC;QAC5D,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,cAAc,GAAG,IAAI,CAAC;KACzD;;IAGO,wCAAY,GAApB;QAAA,iBAqBC;QApBC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACzB,IAAI,CAAC,eAAe,GAAG,IAAI,eAAe,CAA8B,wBAAwB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;SAC3H;QAED,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;QAED,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,EAAE;YACjC,IAAM,YAAY,GAChB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAC9C,YAAY,CAAC,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC;;YAG5C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,SAAS,CAAC;gBAC3D,KAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;aACjC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAE,GAAA,CAAC,CAAC;KAC9D;;IAGO,wCAAY,GAApB;QACE,IAAM,aAAa,GAAG,IAAI,aAAa,CAAC;YACtC,gBAAgB,EAAE,IAAI,CAAC,4BAA4B,EAAE;YACrD,WAAW,EAAE,IAAI;YACjB,aAAa,EAAE,kCAAkC;YACjD,SAAS,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK;YAC9C,cAAc,EAAE,IAAI,CAAC,eAAe,EAAE;YACtC,UAAU,EAAE,0BAA0B;SACvC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;KACtD;;IAGO,wDAA4B,GAApC;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;aAC5B,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,4BAA4B,EAAE,EAC/D,EAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAC,EACrC,EAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAC,CACrC;aACA,oBAAoB,CACnB,EAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAC,EAClC,EAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAC,CACxC;aACA,oBAAoB,CACnB,EAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAC,EACnC,EAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAC,CACnC;aACA,oBAAoB,CACnB,EAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAC,EAChC,EAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAC,CACtC,CAAC;KACL;;gBA3K4B,SAAS;gBACR,OAAO;gBACR,MAAM;gBACI,gBAAgB;gDAC1C,MAAM,SAAC,8BAA8B;gBACJ,eAAe,uBAAhD,QAAQ;gBACiB,cAAc,uBAAvC,QAAQ;gDACR,QAAQ,YAAI,MAAM,SAAC,QAAQ;;IApJxC;QADC,KAAK,EAAE;;;oDAKP;IASQ;QAAR,KAAK,EAAE;;wDAAiD;IAChD;QAAR,KAAK,EAAE;;mDAAkD;IACjD;QAAR,KAAK,EAAE;;2DAA0B;IAGlC;QADC,KAAK,EAAE;;;wDACgD;IAWxD;QADC,KAAK,EAAE;;;iDAGP;IAaD;QADC,KAAK,EAAE;;;oDAGP;IAUD;QADC,KAAK,EAAE;;;qDAIP;IAiBS;QAAT,MAAM,EAAE;;8DAAyC;IAGzC;QAAR,KAAK,EAAE;;yDAA+B;IAE9B;QAAR,KAAK,EAAE;;iEAAgC;IAC/B;QAAR,KAAK,EAAE;;gEAA8B;IAGpB;QAAjB,MAAM,CAAC,QAAQ,CAAC;kCAAe,YAAY;2DAAkC;IAG5D;QAAjB,MAAM,CAAC,QAAQ,CAAC;kCAAe,YAAY;2DAAkC;IA3FnE,iBAAiB;QAR7B,SAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,QAAQ,EAAE,mBAAmB;YAC7B,QAAQ,EAAE,EAAE;YACZ,eAAe,EAAE,uBAAuB,CAAC,MAAM;YAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,mBAAmB,EAAE,KAAK;SAC3B,CAAC;QAqJa,WAAA,MAAM,CAAC,8BAA8B,CAAC,CAAA;QACtC,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,QAAQ,CAAC,CAAA;yCAPZ,SAAS;YACR,OAAO;YACR,MAAM;YACI,gBAAgB,UAET,eAAe;YACvB,cAAc;OAtJzC,iBAAiB,CA4T7B;IAAD,wBAAC;CA5TD;;ACxDA;AAEA,IAAa,iCAAiC,GAAQ;IACpD,OAAO,EAAE,iBAAiB;IAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,sBAAsB,GAAA,CAAC;IACrD,KAAK,EAAE,IAAI;CACZ,CAAC;AAEF,IAAa,6BAA6B,GAAQ;IAChD,OAAO,EAAE,aAAa;IACtB,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,sBAAsB,GAAA,CAAC;IACrD,KAAK,EAAE,IAAI;CACZ,CAAC;AAEF;;;;;AAKA;IAIE,qCAAmB,MAAiC,EAAS,aAA0B;QAApE,WAAM,GAAN,MAAM,CAA2B;QAAS,kBAAa,GAAb,aAAa,CAAa;QACrF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;KAChC;IACH,kCAAC;AAAD,CAAC,IAAA;AAED;AAsBA;IA8LE,gCAAoB,WAAuB,EACZ,YAAgC,EACD,YAAgC,EAC9D,UAAwB;QAHxD,iBAeC;QAfmB,gBAAW,GAAX,WAAW,CAAY;QACZ,iBAAY,GAAZ,YAAY,CAAoB;QACD,iBAAY,GAAZ,YAAY,CAAoB;QAC9D,eAAU,GAAV,UAAU,CAAc;;QAhE9C,eAAU,GAAG,IAAI,YAAY,EAAkC,CAAC;;QAGhE,cAAS,GAAG,IAAI,YAAY,EAAkC,CAAC;;QAGzE,iBAAY,GAAG,IAAI,YAAY,EAAY,CAAC;;QAG5C,oBAAe,GAAG,IAAI,YAAY,EAAW,CAAC;QAE9C,eAAU,GAAG;SACZ,CAAA;QAEO,iBAAY,GAAyB;SAC5C,CAAA;QAEO,uBAAkB,GAAG;SAC5B,CAAA;QAEO,4BAAuB,GAAG,YAAY,CAAC,KAAK,CAAC;QAE7C,wBAAmB,GAAG,YAAY,CAAC,KAAK,CAAC;;QAGzC,oBAAe,GAAgB;YACrC,OAAO,KAAI,CAAC,eAAe;gBACzB,IAAI,GAAG,EAAC,oBAAoB,EAAE,EAAC,MAAM,EAAE,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAC,EAAC,CAAC;SACjF,CAAA;;QAGO,kBAAa,GAAgB,UAAC,OAAwB;YAC5D,IAAM,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YACxG,OAAO,CAAC,CAAC,KAAI,CAAC,GAAG,IAAI,CAAC,YAAY;gBAChC,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,KAAI,CAAC,GAAG,EAAE,YAAY,CAAC,IAAI,CAAC;gBAC9D,IAAI,GAAG,EAAC,kBAAkB,EAAE,EAAC,KAAK,EAAE,KAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,YAAY,EAAC,EAAC,CAAC;SAC1E,CAAA;;QAGO,kBAAa,GAAgB,UAAC,OAAwB;YAC5D,IAAM,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YACxG,OAAO,CAAC,CAAC,KAAI,CAAC,GAAG,IAAI,CAAC,YAAY;gBAChC,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,KAAI,CAAC,GAAG,EAAE,YAAY,CAAC,IAAI,CAAC;gBAC9D,IAAI,GAAG,EAAC,kBAAkB,EAAE,EAAC,KAAK,EAAE,KAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,YAAY,EAAC,EAAC,CAAC;SAC1E,CAAA;;QAGO,qBAAgB,GAAgB,UAAC,OAAwB;YAC/D,IAAM,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YACxG,OAAO,CAAC,KAAI,CAAC,WAAW,IAAI,CAAC,YAAY,IAAI,KAAI,CAAC,WAAW,CAAC,YAAY,EAAE,2BAA2B,CAAC,IAAI,CAAC;gBAC3G,IAAI,GAAG,EAAC,qBAAqB,EAAE,IAAI,EAAC,CAAC;SACxC,CAAA;;QAGO,eAAU,GAChB,UAAU,CAAC,OAAO,CAChB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;;QAGnF,oBAAe,GAAG,KAAK,CAAC;QAM9B,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,MAAM,0BAA0B,CAAC,iBAAiB,CAAC,CAAC;SACrD;QACD,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,MAAM,0BAA0B,CAAC,sBAAsB,CAAC,CAAC;SAC1D;;QAGD,IAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC,aAAa,CAAC,SAAS,CAAC;YAC9D,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC;SACzB,CAAC,CAAC;KACJ;+BA7MU,sBAAsB;IAIjC,sBAAI,qDAAiB;;aAArB,UAAsB,KAA2B;YAC/C,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;SAChC;;;OAAA;IAIO,mDAAkB,GAA1B,UAA2B,KAA2B;QACpD,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SACvC;KACF;IAEQ,sBAAI,uDAAmB;aAAvB,UAAwB,MAAsE;YACrG,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;YAC1B,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;;;OAAA;IAMD,sBAAI,yCAAK;;aAAT;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;aAED,UAAU,KAAe;YAAzB,iBAcC;YAbC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC7C,IAAI,CAAC,eAAe,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAClE,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;YACpD,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;YAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;;YAGzB,UAAU,CAAC;gBACT,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE;oBACnD,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC/B;aACF,CAAC,CAAC;SACJ;;;OAhBA;IAkBO,iDAAgB,GAAxB;QACE,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI;YAC3B,KAAK,MAAM;gBACT,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC;YAC7C,KAAK,UAAU;gBACb,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC;YACjD,KAAK,MAAM;gBACT,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC;YAC7C,KAAK,OAAO;gBACV,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC;SAC/C;KACF;IAEO,+CAAc,GAAtB;QACE,IAAI,WAAW,CAAC;QAEhB,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI;YAC3B,KAAK,MAAM;gBACT,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC;gBAChD,MAAM;YACR,KAAK,UAAU;gBACb,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC;gBACpD,MAAM;YACR,KAAK,MAAM;gBACT,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC;gBAChD,MAAM;YACR,KAAK,OAAO;gBACV,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,CAAC;gBACjD,MAAM;SACT;QACD,IAAI,CAAC,WAAW,EAAE;YAChB,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC;SACjD;QAED,OAAO,WAAW,CAAC;KACpB;IAMD,sBAAI,uCAAG;;aAAP;YACE,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;aAED,UAAQ,KAAe;YACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACvF,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;;;OALA;IAWD,sBAAI,uCAAG;;aAAP;YACE,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;aAED,UAAQ,KAAe;YACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACvF,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;;;OALA;IAWD,sBAAI,4CAAQ;;aAAZ;YACE,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;SACzB;aAED,UAAa,KAAU;YACrB,IAAM,QAAQ,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;YAE9C,IAAI,IAAI,CAAC,SAAS,KAAK,QAAQ,EAAE;gBAC/B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;gBAC1B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACrC;SACF;;;OATA;IA4FD,mDAAkB,GAAlB;QAAA,iBAWC;QAVC,IAAI,IAAI,CAAC,WAAW,EAAE;;YAEpB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,UAAC,QAAW;gBAClF,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;gBACtB,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;gBAC5B,KAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,2BAA2B,CAAC,KAAI,EAAE,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC;gBAC3F,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,2BAA2B,CAAC,KAAI,EAAE,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC;aAC7F,CAAC,CAAC;SACN;KACF;IAED,4CAAW,GAAX;QACE,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;QAC3C,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC7B,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;KACjC;IAED,0DAAyB,GAAzB,UAA0B,EAAc;QACtC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;KAC9B;IAED,yCAAQ,GAAR,UAAS,CAAkB;QACzB,OAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;KACpD;;;;;IAMD,6DAA4B,GAA5B;QACE,OAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;KAC1E;;IAGD,2CAAU,GAAV,UAAW,KAAQ;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;IAGD,iDAAgB,GAAhB,UAAiB,EAAwB;QACvC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;KACxB;;IAGD,kDAAiB,GAAjB,UAAkB,EAAc;QAC9B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;KACtB;;IAGD,iDAAgB,GAAhB,UAAiB,QAAiB;QAChC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;IAED,2CAAU,GAAV,UAAW,KAAoB;QAC7B,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,KAAK,UAAU,EAAE;YAChD,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YACxB,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;KACF;IAED,yCAAQ,GAAR,UAAS,KAAa;QACpB,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QACjE,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAChE,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,2BAA2B,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC;KAC5F;IAED,0CAAS,GAAT;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,2BAA2B,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC;KAC7F;;IAGD,wCAAO,GAAP;;QAEE,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC/B;QAED,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;;IAGQ,6CAAY,GAApB,UAAqB,KAAe;QAClC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK;YAClC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,GAAG,EAAE,CAAC;KACzE;;;gBA5G+B,UAAU;gBACE,eAAe,uBAA/C,QAAQ;gDACR,QAAQ,YAAI,MAAM,SAAC,oBAAoB;gBACR,YAAY,uBAA3C,QAAQ;;IA7LrB;QADC,KAAK,EAAE;kCACqB,iBAAiB;yCAAjB,iBAAiB;mEAE7C;IAWQ;QAAR,KAAK,EAAE;;;qEAGP;IAMD;QADC,KAAK,EAAE;;;uDAGP;IA2DD;QADC,KAAK,EAAE;;;qDAGP;IAWD;QADC,KAAK,EAAE;;;qDAGP;IAWD;QADC,KAAK,EAAE;;;0DAGP;IAcS;QAAT,MAAM,EAAE;;8DAAiE;IAGhE;QAAT,MAAM,EAAE;;6DAAgE;IApI9D,sBAAsB;QArBlC,SAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;YACpC,SAAS,EAAE;gBACT,iCAAiC;gBACjC,6BAA6B;gBAC7B,EAAC,OAAO,EAAE,wBAAwB,EAAE,WAAW,EAAE,wBAAsB,EAAC;aACzE;YACD,IAAI,EAAE;gBACJ,sBAAsB,EAAE,MAAM;gBAC9B,kBAAkB,EAAE,iDAAiD;gBACrE,YAAY,EAAE,0CAA0C;gBACxD,YAAY,EAAE,0CAA0C;gBACxD,YAAY,EAAE,UAAU;gBACxB,SAAS,EAAE,4BAA4B;gBACvC,SAAS,EAAE,+BAA+B;gBAC1C,UAAU,EAAE,aAAa;gBACzB,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,oBAAoB;aAClC;YACD,QAAQ,EAAE,oBAAoB;SAC/B,CAAC;QAgMa,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,oBAAoB,CAAC,CAAA;QACxC,WAAA,QAAQ,EAAE,CAAA;yCAHU,UAAU;YACE,eAAe,UAEhB,YAAY;OAjM7C,sBAAsB,CA2SlC;IAAD,6BAAC;CA3SD;;;IC3CE,iCAAmB,KAAwB,EAAU,kBAAqC;QAAvE,UAAK,GAAL,KAAK,CAAmB;QAAU,uBAAkB,GAAlB,kBAAkB,CAAmB;QAflF,kBAAa,GAAG,YAAY,CAAC,KAAK,CAAC;KAemD;IAR9F,sBAAI,6CAAQ;;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,KAAK,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;SACvF;aACD,UAAa,KAAc;YACzB,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;SAC/C;;;OAHA;IAQD,6CAAW,GAAX,UAAY,OAAsB;QAChC,IAAI,OAAO,CAAC,UAAU,EAAE;YACtB,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;KACF;IAED,6CAAW,GAAX;QACE,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;KAClC;IAED,oDAAkB,GAAlB;QACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IAED,uCAAK,GAAL,UAAM,KAAY;QAChB,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACzC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YAC3B,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;KACF;IAEO,oDAAkB,GAA1B;QAAA,iBAQC;QAPC,IAAM,kBAAkB,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,GAAGA,EAAY,EAAE,CAAC;QACtG,IAAM,aAAa,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,gBAAgB;YAC7E,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,eAAe,GAAGA,EAAY,EAAE,CAAC;QAE1E,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,kBAAkB,EAAE,aAAa,CAAC;aAC5E,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,GAAA,CAAC,CAAC;KAC9D;;gBA/ByB,iBAAiB;gBAA8B,iBAAiB;;IAZ5E;QAAb,KAAK,CAAC,KAAK,CAAC;kCAAiB,iBAAiB;mEAAI;IAInD;QADC,KAAK,EAAE;;;2DAGP;IAVU,uBAAuB;QAXnC,SAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,8pDAAyC;YACzC,IAAI,EAAE;gBACJ,OAAO,EAAE,2BAA2B;aACrC;YACD,QAAQ,EAAE,yBAAyB;YACnC,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,mBAAmB,EAAE,KAAK;YAC1B,eAAe,EAAE,uBAAuB,CAAC,MAAM;SAChD,CAAC;yCAiB0B,iBAAiB,EAA8B,iBAAiB;OAhB/E,uBAAuB,CAgDnC;IAAD,8BAAC;CAhDD;;ACJA,IAAM,aAAa,GAAG,CAAC,CAAC;AAExB;;;;AAWA;IAqEE,oCAA+B,QAA4B,EACG,YAAgC;QAD/D,aAAQ,GAAR,QAAQ,CAAoB;QACG,iBAAY,GAAZ,YAAY,CAAoB;QApErF,SAAI,GAA2C,MAAM,CAAC;QAErD,mBAAc,GAAG,IAAI,YAAY,EAAQ,CAAC;;QA2C1C,mBAAc,GAAG,IAAI,YAAY,EAAK,CAAC;QAwB/C,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,MAAM,0BAA0B,CAAC,iBAAiB,CAAC,CAAC;SACrD;QAED,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,MAAM,0BAA0B,CAAC,sBAAsB,CAAC,CAAC;SAC1D;QAED,IAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;QACzD,IAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACjE,IAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;;QAG7D,IAAI,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,CAAC;YACtC,OAAO,EAAC,IAAI,MAAA,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC,CAAC,EAAC,CAAC;SAC1C,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC;QAE1F,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;KAC1C;IAhFD,sBAAI,kDAAU;;;;aAAd;YACE,OAAO,IAAI,CAAC,WAAW,CAAC;SACzB;aAED,UAAe,KAAQ;YACrB,IAAI,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC;YACrC,IAAI,CAAC,WAAW,GAAG,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YAClD,IAAI,aAAa,IAAI,IAAI,CAAC,WAAW;gBACnC,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE;gBAClE,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE;oBAChE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;iBAC7B;qBAAM;oBACL,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;iBAC5B;aACF;SACF;;;OAdA;IAoBD,sBAAI,gDAAQ;;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;aAED,UAAa,KAAQ;YACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACjE;;;OALA;IA0DD,uDAAkB,GAAlB;QACE,IAAI,CAAC,KAAK,EAAE,CAAC;KACd;;IAGD,kDAAa,GAAb,UAAc,IAAY;QACxB,IAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAC/C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAC/E,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAC5C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QAE5C,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACxC;;IAGO,0CAAK,GAAb;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;QAErE,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EACpF,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAC1C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EACtC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,gBAAgB;YACnB,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC;gBACvD,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,IAAI,aAAa,CAAC;QAEvD,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;;IAGO,qDAAgB,GAAxB;QACE,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACnE,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;QAC7C,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAG,IAAI,EAAE,EAAE;YAC3E,IAAI,IAAI,IAAI,aAAa,EAAE;gBACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACrB,IAAI,GAAG,CAAC,CAAC;aACV;YACD,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CACrC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EACtC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,CAAC,EAC9C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EACtC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAC5C,IAAI,OAAO,GAAG,CAAC,IAAI,CAAC,UAAU;gBAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACxB,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YACpF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;iBAChC,IAAI,CAAC,IAAI,6BAA6B,CAAC,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;SACrF;KACF;;;;;IAMO,2DAAsB,GAA9B,UAA+B,IAAO;QACpC,OAAO,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC;YAC1D,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;KACtC;IAEO,kDAAa,GAArB,UAAsB,SAAiB;QACrC,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;KACjC;IAED,uDAAkB,GAAlB;QACE,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;KAC1B;;gBA5FwC,eAAe,uBAA3C,QAAQ;gDACR,QAAQ,YAAI,MAAM,SAAC,oBAAoB;;IApE3C;QAAR,KAAK,EAAE;;4DAAuD;IAErD;QAAT,MAAM,EAAE;;sEAA2C;IAMpD;QADC,KAAK,EAAE;;;gEAGP;IAoBD;QADC,KAAK,EAAE;;;8DAGP;IAUQ;QAAR,KAAK,EAAE;;kEAAkC;IAGhC;QAAT,MAAM,EAAE;;sEAAwC;IA/CtC,0BAA0B;QAPtC,SAAS,CAAC;YACT,QAAQ,EAAE,+BAA+B;YACzC,6qBAA8B;YAC9B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;SAChD,CAAC;QAsEa,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,oBAAoB,CAAC,CAAA;yCADZ,eAAe;OArE7C,0BAA0B,CAmKtC;IAAD,iCAAC;CAnKD;;ACbA;;;;AAWA;IAgEE,mCAA+B,QAA4B,EACG,YAAgC;QAD/D,aAAQ,GAAR,QAAQ,CAAoB;QACG,iBAAY,GAAZ,YAAY,CAAoB;QA/DpF,mBAAc,GAAG,IAAI,YAAY,EAAQ,CAAC;QAE3C,SAAI,GAA2C,MAAM,CAAC;;QAyCrD,mBAAc,GAAG,IAAI,YAAY,EAAK,CAAC;QAqB/C,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,MAAM,0BAA0B,CAAC,iBAAiB,CAAC,CAAC;SACrD;QAED,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,MAAM,0BAA0B,CAAC,sBAAsB,CAAC,CAAC;SAC1D;QAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;KAC1C;IAnED,sBAAI,iDAAU;;aAAd;YACE,OAAO,IAAI,CAAC,WAAW,CAAC;SACzB;aAED,UAAe,KAAQ;YACrB,IAAI,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC;YACrC,IAAI,CAAC,WAAW,GAAG,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YAClD,IAAI,aAAa,IAAI,IAAI,CAAC,WAAW;gBACnC,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE;gBAC1D,IAAI,CAAC,KAAK,EAAE,CAAC;;;;;;aAMd;SACF;;;OAdA;IAoBD,sBAAI,+CAAQ;;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;aAED,UAAa,KAAQ;YACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAClE;;;OALA;IA6CD,sDAAkB,GAAlB;QACE,IAAI,CAAC,KAAK,EAAE,CAAC;KACd;;IAGD,kDAAc,GAAd,UAAe,KAAa;QAC1B,IAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAC/C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAC7C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EACtC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EACtC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QAE5C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;KAC7B;;IAGO,yCAAK,GAAb;QAAA,iBASC;QARC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;QACtE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE7D,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;;QAEtD,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,GAAG,CAC1E,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,GAAA,CAAC,GAAA,CAAC,CAAC;KACjE;;;;;IAMO,0DAAsB,GAA9B,UAA+B,IAAO;QACpC,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC;YAClD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;KACvC;;IAGO,uDAAmB,GAA3B,UAA4B,KAAa,EAAE,SAAiB;QAC1D,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAClC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC,EAC3E,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EACtC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAC3C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QAChD,OAAO,IAAI,6BAA6B,CACtC,KAAK,EAAE,SAAS,CAAC,iBAAiB,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;KACjF;;IAGO,mDAAe,GAAvB,UAAwB,KAAa;QACnC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,OAAO,IAAI,CAAC;SACb;QAED,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAC7C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC,EAChD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EACtC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;;QAG5C,KAAK,IAAI,IAAI,GAAG,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,KAAK,EAC9D,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE;YAClD,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;gBACzB,OAAO,IAAI,CAAC;aACb;SACF;QAED,OAAO,KAAK,CAAC;KACd;;;;IAMD,sDAAkB,GAAlB;QACE,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;KAC1B;;gBA1FwC,eAAe,uBAA3C,QAAQ;gDACR,QAAQ,YAAI,MAAM,SAAC,oBAAoB;;IA/D1C;QAAT,MAAM,EAAE;;qEAA2C;IAE3C;QAAR,KAAK,EAAE;;2DAAuD;IAI/D;QADC,KAAK,EAAE;;;+DAGP;IAoBD;QADC,KAAK,EAAE;;;6DAGP;IAUQ;QAAR,KAAK,EAAE;;iEAAkC;IAGhC;QAAT,MAAM,EAAE;;qEAAwC;IA7CtC,yBAAyB;QAPrC,SAAS,CAAC;YACT,QAAQ,EAAE,8BAA8B;YACxC,0rBAA6B;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;SAChD,CAAC;QAiEa,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,oBAAoB,CAAC,CAAA;yCADZ,eAAe;OAhE7C,yBAAyB,CA2JrC;IAAD,gCAAC;CA3JD;;;ICoBA;KACC;IADY,uBAAuB;QAnCnC,QAAQ,CAAC;YACR,OAAO,EAAE;gBACP,YAAY;gBACZ,eAAe;gBACf,eAAe;gBACf,aAAa;gBACb,aAAa;gBACb,UAAU;aACX;YACD,eAAe,EAAE;gBACf,wBAAwB;aACzB;YACD,YAAY,EAAE;gBACZ,yBAAyB;gBACzB,6BAA6B;gBAC7B,sBAAsB;gBACtB,iBAAiB;gBACjB,uBAAuB;gBACvB,sBAAsB;gBACtB,wBAAwB;gBACxB,0BAA0B;gBAC1B,yBAAyB;aAC1B;YACD,OAAO,EAAE;gBACP,yBAAyB;gBACzB,6BAA6B;gBAC7B,sBAAsB;gBACtB,iBAAiB;gBACjB,uBAAuB;gBACvB,sBAAsB;gBACtB,wBAAwB;gBACxB,0BAA0B;gBAC1B,yBAAyB;aAC1B;SACF,CAAC;OACW,uBAAuB,CACnC;IAAD,8BAAC;CADD;;ACtDA;;GAEG;;;;"}